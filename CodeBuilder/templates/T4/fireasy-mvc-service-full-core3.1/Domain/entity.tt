<#@ template hostSpecific="true" debug="true" #>
<#@ output extension=".cs" #>
<#@ include file="public\base.tt" #>
<# 
    TemplateHost host = (TemplateHost)Host;
    var table = host.Current;
    var ptype = GetPrimaryKeyPTypeNonNullable(table);
    var pk = GetPrimaryKey(table);
#>
using System;
using System.Collections.Generic;
using Fireasy.Data.Entity;

namespace <#= host.Profile.ProjectCode #><#= CheckDot(host.Profile.Module) #>.Domain<#= CheckDot(host.Profile.SubNameSpace) #>.Entities
{
    /// <summary>
    /// <#= table.Description #> 实体类。
    /// </summary>
<#
if (!host.Profile.Fluent)
{
#>
    [Serializable]
    [EntityMapping("<#= table.Name #>", Description = "<#= table.Description #>")]
<#
}
#>
    public partial class <#= table.ClassName #> : LightEntity<<#= table.ClassName #>>
    {
<#
	foreach (var column in table.Columns)
	{
#>
        /// <summary>
        /// 获取或设置<#= column.Description #>。
        /// </summary>
<#
if (!host.Profile.Fluent)
{
#>
        [PropertyMapping(ColumnName = "<#= column.Name #>", Description = "<#= column.Description #>", <#= column.AutoIncrement ? "GenerateType = IdentityGenerateType.AutoIncrement, " : string.Empty #><#= column.IsPrimaryKey ? "IsPrimaryKey = true, " : string.Empty #><#= CheckDelFlag(column) ? "IsDeletedKey = true, " : string.Empty #><#= column.PropertyType == "string" && column.Length != null ? "Length = " + column.Length + ", " : (column.PropertyType == "decimal" || column.PropertyType == "decimal?" ? "Precision = " + column.Precision + ", Scale = " + column.Scale + ", ": string.Empty) #>IsNullable = <#= column.IsNullable ? "true" : "false" #>)]
 <#
}
#>
        public virtual <#= column.PropertyType #> <#= column.PropertyName #> { get; set; }

<#
	}
	
	foreach (var fk in table.ForeignKeys)
	{
#>
        /// <summary>
        /// 获取或设置关联 <see cref="<#= fk.PkTable.ClassName #>"/> 对象。
        /// </summary>
        public virtual <#= fk.PkTable.ClassName #> <#= fk.PkTable.ClassName #> { get; set; }

<#
	}
	
	foreach (var fk in table.SubKeys)
	{
#>
        /// <summary>
        /// 获取或设置 <see cref="<#= fk.FkTable.ClassName #>"/> 的子实体集。
        /// </summary>
        public virtual EntitySet<<#= fk.FkTable.ClassName #>> <#= StringExtension.ToPlural(fk.FkTable.ClassName) #> { get; set; }

<#
	}
#>
    }
}
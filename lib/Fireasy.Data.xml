<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fireasy.Data</name>
    </assembly>
    <members>
        <member name="T:Fireasy.Data.AnonymousRowMapper`1">
            <summary>
            一个用于将数据行转换为匿名类型对象的映射器。无法继承此类。
            </summary>
            <typeparam name="T">要构造的匿名类型。</typeparam>
        </member>
        <member name="M:Fireasy.Data.AnonymousRowMapper`1.Map(System.Data.IDataReader)">
            <summary>
            将一个 <see cref="T:System.Data.IDataReader"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>由当前 <see cref="T:System.Data.IDataReader"/> 对象中的数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="M:Fireasy.Data.AnonymousRowMapper`1.Map(System.Data.DataRow)">
            <summary>
            将一个 <see cref="T:System.Data.DataRow"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="row">一个 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns>由 <see cref="T:System.Data.DataRow"/> 中数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="P:Fireasy.Data.AnonymousRowMapper`1.RecordWrapper">
            <summary>
            获取或设置 <see cref="T:Fireasy.Data.RecordWrapper.IRecordWrapper"/>。
            </summary>
        </member>
        <member name="P:Fireasy.Data.AnonymousRowMapper`1.Initializer">
            <summary>
            获取或设置对象的初始化器。
            </summary>
        </member>
        <member name="T:Fireasy.Data.AsyncTaskManager">
            <summary>
            异步任务管理器。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.AsyncTaskManager.#ctor(Fireasy.Data.IDatabase)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.AsyncTaskManager"/> 类的新实例。
            </summary>
            <param name="database">要托管的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
        </member>
        <member name="P:Fireasy.Data.AsyncTaskManager.IsCommitTransaction">
            <summary>
            获取或设置是否提交事务。
            </summary>
        </member>
        <member name="P:Fireasy.Data.AsyncTaskManager.HasTasks">
            <summary>
            获取是否有异步任务。
            </summary>
        </member>
        <member name="M:Fireasy.Data.AsyncTaskManager.Adapter(System.Threading.Tasks.Task)">
            <summary>
            使用异步任务管理器接管任务对象。
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.AsyncTaskManager.Adapter``1(System.Threading.Tasks.Task{``0})">
            <summary>
            使用异步任务管理器接管任务对象。
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Backup.BackupException">
            <summary>
            数据库在备份或恢复过程中发生异常。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Backup.BackupException.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Backup.BackupException"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Backup.BackupException.#ctor(System.Exception)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Backup.BackupException"/> 类的新实例。
            </summary>
            <param name="exception">导致当前异常的异常。</param>
        </member>
        <member name="M:Fireasy.Data.Backup.BackupException.#ctor(System.String,System.Exception)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Backup.BackupException"/> 类的新实例。
            </summary>
            <param name="message">解释异常原因的错误消息。</param>
            <param name="exception">导致当前异常的异常</param>
        </member>
        <member name="T:Fireasy.Data.Backup.BackupOption">
            <summary>
            备份或恢复的选项。无法继承此类。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Backup.BackupOption.Database">
            <summary>
            获取或设置数据库的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Backup.BackupOption.FileName">
            <summary>
            获取或设置备份文件的名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Backup.IBackupProvider">
            <summary>
            提供对数据库备份与恢复的一组方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Backup.IBackupProvider.Backup(Fireasy.Data.IDatabase,Fireasy.Data.Backup.BackupOption)">
            <summary>
            对指定的数据库进行备份。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="option">备份选项。</param>
        </member>
        <member name="M:Fireasy.Data.Backup.IBackupProvider.Restore(Fireasy.Data.IDatabase,Fireasy.Data.Backup.BackupOption)">
            <summary>
            使用指定的备份文件恢复数据库。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="option">备份选项。</param>
        </member>
        <member name="T:Fireasy.Data.Backup.MsSqlBackup">
            <summary>
            实用于 MsSql 的数据库备份与恢复。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Backup.MsSqlBackup.Backup(Fireasy.Data.IDatabase,Fireasy.Data.Backup.BackupOption)">
            <summary>
            对指定的数据库进行备份。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="option">备份选项。</param>
        </member>
        <member name="M:Fireasy.Data.Backup.MsSqlBackup.Restore(Fireasy.Data.IDatabase,Fireasy.Data.Backup.BackupOption)">
            <summary>
            使用指定的备份文件恢复数据库。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="option">备份选项。</param>
        </member>
        <member name="T:Fireasy.Data.Batcher.BatcherBase">
            <summary>
            数据批量插入的抽象类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherBase.GetNameTypeMapping(System.Data.DataTable)">
            <summary>
            获取 <see cref="T:System.Data.DataTable"/> 中字段名称和 DbType 的映射。
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherBase.GetNameTypeMapping(System.Object)">
            <summary>
            获取 List 中属性名和 DbType 的映射。
            </summary>
            <param name="item">元素。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherBase.MapDataRow(Fireasy.Data.Provider.IProvider,System.Collections.Generic.IList{Fireasy.Data.PropertyFieldMapping},System.Data.DataRow,System.Int32,System.Data.Common.DbParameterCollection)">
            <summary>
            使用 <see cref="T:System.Data.DataRow"/> 映射生成 Sql 语句。
            </summary>
            <param name="provider"></param>
            <param name="mapping"></param>
            <param name="row"></param>
            <param name="batch"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherBase.MapListItem``1(Fireasy.Data.Provider.IProvider,System.Collections.Generic.IList{Fireasy.Data.PropertyFieldMapping},``0,System.Int32,System.Data.Common.DbParameterCollection)">
            <summary>
            使用 <see cref="T:System.Collections.IList"/> 映射生成 Sql 语句。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="provider"></param>
            <param name="mappings"></param>
            <param name="item"></param>
            <param name="batch"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherBase.BatchSplitData(System.Collections.ICollection,System.Int32,System.Action{System.Int32,System.Int32,System.Object},System.Action{System.Int32,System.Int32,System.Int32,System.Boolean})">
            <summary>
            根据 <paramref name="batchSize"/> 拆分集合中的数据。
            </summary>
            <param name="collection">数据集合。</param>
            <param name="batchSize">每一批次写入的数据大小。</param>
            <param name="rowAction">枚举第一条数据时执行的方法。参数1为记录索引，参数2为当前批次中记录的索引，参数3为当前的记录。</param>
            <param name="splitAction">数据达到一批时执行的方法。参数1为记录索引，参数2为当前批次中记录的索引，参数3为剩余的记录条数，参数4为是否为最后的批次。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherBase.ToCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            转换为对象集合。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherBase.NeedPutParameters(System.Data.DbType,System.Object)">
            <summary>
            判断是否需要放入到参数集合中。
            </summary>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Batcher.BatcherChecker">
            <summary>
            批量生成数据的检查辅助类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherChecker.CheckDataTable(System.Data.DataTable)">
            <summary>
            检查 <see cref="T:System.Data.DataTable"/> 是否可以批量生成其内部的数据。
            </summary>
            <param name="dataTable">要检查的 <see cref="T:System.Data.DataTable"/> 对象。</param>
            <returns>可以生成，为 true，否则为 false。</returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherChecker.CheckList``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            检查 List 是否可以批量生成其每一个元素。
            </summary>
            <typeparam name="T">List 中元素的类型。</typeparam>
            <param name="list">要检查的 List 对象。</param>
            <param name="tableName">表的名称。</param>
            <returns>可以生成，为 true，否则为 false。</returns>
        </member>
        <member name="T:Fireasy.Data.Batcher.BatcherException">
            <summary>
            批处理在执行过程中发生异常。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.BatcherException.#ctor(System.Collections.ICollection,System.Exception)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Batcher.BatcherException"/> 类的新实例。
            </summary>
            <param name="collection">批量插入的数据列表。</param>
            <param name="exception">内部的异常对象。</param>
        </member>
        <member name="P:Fireasy.Data.Batcher.BatcherException.Collection">
            <summary>
            获取批量插入的数据表。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Batcher.IBatcherProvider">
            <summary>
            提供数据批量处理的方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.IBatcherProvider.Insert(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.IBatcherProvider.Insert``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.IBatcherProvider.Insert(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.IBatcherProvider.InsertAsync(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.IBatcherProvider.InsertAsync``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.IBatcherProvider.InsertAsync(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="T:Fireasy.Data.Batcher.DataTableBatchReader">
            <summary>
            <see cref="T:System.Data.DataTable"/> 的读取器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.DataTableBatchReader.#ctor(System.Data.SqlClient.SqlBulkCopy,System.Data.DataTable)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Batcher.DataTableBatchReader"/> 类的新实例。
            </summary>
            <param name="bulk"></param>
            <param name="table"></param>
        </member>
        <member name="T:Fireasy.Data.Batcher.EnumerableBatchReader`1">
            <summary>
            <see cref="T:System.Collections.IEnumerable"/> 的读取器。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Fireasy.Data.Batcher.EnumerableBatchReader`1.#ctor(System.Data.SqlClient.SqlBulkCopy,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            初始化 <see cref="!:EnumerableBatchReader"/> 类的新实例。
            </summary>
            <param name="bulk"></param>
            <param name="enumerable"></param>
        </member>
        <member name="M:Fireasy.Data.Batcher.EnumerableBatchReader`1.InitAccessories(System.Data.SqlClient.SqlBulkCopy,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            初始化对象访问器。
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:Fireasy.Data.Batcher.MsSqlBatcher">
            <summary>
            为 System.Data.SqlClient 提供的用于批量操作的方法。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.MsSqlBatcher.Insert``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MsSqlBatcher.Insert(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MsSqlBatcher.Insert(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MsSqlBatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MsSqlBatcher.InsertAsync``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MsSqlBatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="T:Fireasy.Data.Batcher.MySqlBatcher">
            <summary>
            为 MySql.Data 组件提供的用于批量操作的方法。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.MySqlBatcher.Insert(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MySqlBatcher.Insert``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MySqlBatcher.Insert(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MySqlBatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MySqlBatcher.InsertAsync``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MySqlBatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.MySqlBatcher.BatchInsert(Fireasy.Data.IDatabase,System.Collections.ICollection,System.String,System.Collections.Generic.IList{Fireasy.Data.PropertyFieldMapping},System.Func{System.Collections.Generic.IList{Fireasy.Data.PropertyFieldMapping},System.Data.Common.DbCommand,System.Int32,System.Object,System.String},System.Int32,System.Action{System.Int32})">
            <summary>
            批量插入集合中的数据。
            </summary>
            <param name="database">当前的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="collection">要插入的数据的集合。</param>
            <param name="tableName">表的名称。</param>
            <param name="mapping">名称和类型的映射字典。</param>
            <param name="valueFunc">取值函数。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="T:Fireasy.Data.Batcher.OracleDABatcher">
            <summary>
            Oracle.Data.Access 组件提供的用于批量操作的方法。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.Insert(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.Insert``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.Insert(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.InsertAsync``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.BatchInsert(Fireasy.Data.IDatabase,System.Collections.ICollection,System.String,System.Collections.Generic.IList{Fireasy.Data.PropertyFieldMapping},System.Int32,System.Action{System.Int32})">
            <summary>
            批量插入集合中的数据。
            </summary>
            <param name="database">当前的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="collection">要插入的数据的集合。</param>
            <param name="tableName">表的名称。</param>
            <param name="mapping">名称和类型的映射字典。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.CheckBulkCopy(Fireasy.Data.Provider.IProvider)">
            <summary>
            检查是否可以使用OracleBulkCopy类执行批量插入。
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.BulkCopy(Fireasy.Data.IDatabase,System.Type,System.Data.DataTable,System.Int32)">
            <summary>
            使用OracleBulkCopy类执行批量插入。
            </summary>
            <param name="database">当前的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="bulkType">程序集中 OracleBulkCopy 类型。</param>
            <param name="table">要插入的数据表。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.SetArrayBindCount(System.Data.Common.DbCommand,System.Int32)">
            <summary>
            设置ArrayBindCount属性。
            </summary>
            <param name="command"></param>
            <param name="batchSize"></param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.InitArrayData(System.Int32,System.Int32)">
            <summary>
            创建一个二维数组。
            </summary>
            <param name="columns">字段的个数。</param>
            <param name="length">元素的个数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.FillArrayData(System.Collections.Generic.IEnumerable{Fireasy.Data.PropertyFieldMapping},System.Object,System.Object[][],System.Int32)">
            <summary>
            使用当前的记录填充数组。
            </summary>
            <param name="mappings">名称和类型的映射字典。</param>
            <param name="item">当前的数据项。</param>
            <param name="data">数组的数组。</param>
            <param name="batch">当前批次中的索引。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.OracleDABatcher.AddOrReplayParameters(Fireasy.Data.Syntax.ISyntaxProvider,System.Collections.Generic.IEnumerable{Fireasy.Data.PropertyFieldMapping},System.Data.Common.DbParameterCollection,System.Object[][],System.Func{System.Data.Common.DbParameter})">
            <summary>
            添加或替换集合中的参数。
            </summary>
            <param name="syntax"></param>
            <param name="mapping">名称和类型的映射字典。</param>
            <param name="parameters"><see cref="T:System.Data.Common.DbCommand"/> 中的参数集合。</param>
            <param name="data">数组的数组。</param>
            <param name="parFunc">创建 <see cref="T:System.Data.Common.DbParameter"/> 对象的函数。</param>
        </member>
        <member name="T:Fireasy.Data.Batcher.SQLiteBatcher">
            <summary>
            为 SQLite 组件提供的用于批量操作的方法。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Batcher.SQLiteBatcher.Insert(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.SQLiteBatcher.Insert``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.SQLiteBatcher.Insert(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.SQLiteBatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.DataTable,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的数据批量插入到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="dataTable">要批量插入的 <see cref="T:System.Data.DataTable"/>。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.SQLiteBatcher.InsertAsync``1(Fireasy.Data.IDatabase,System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将一个 <see cref="T:System.Collections.IList"/> 批量插入到数据库中。 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="list">要写入的数据列表。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.SQLiteBatcher.InsertAsync(Fireasy.Data.IDatabase,System.Data.IDataReader,System.String,System.Int32,System.Action{System.Int32})">
            <summary>
            将 <paramref name="reader"/> 中的数据流批量复制到数据库中。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="reader">源数据读取器。</param>
            <param name="tableName">要写入的数据表的名称。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="M:Fireasy.Data.Batcher.SQLiteBatcher.BatchInsert(Fireasy.Data.IDatabase,System.Collections.ICollection,System.String,System.Collections.Generic.IList{Fireasy.Data.PropertyFieldMapping},System.Func{System.Collections.Generic.IList{Fireasy.Data.PropertyFieldMapping},System.Data.Common.DbCommand,System.Int32,System.Object,System.String},System.Int32,System.Action{System.Int32})">
            <summary>
            批量插入集合中的数据。
            </summary>
            <param name="database">当前的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="collection">要插入的数据的集合。</param>
            <param name="tableName">表的名称。</param>
            <param name="mapping">名称和类型的映射字典。</param>
            <param name="valueFunc">取值函数。</param>
            <param name="batchSize">每批次写入的数据量。</param>
            <param name="completePercentage">已完成百分比的通知方法。</param>
        </member>
        <member name="T:Fireasy.Data.CodedData">
            <summary>
            表示编码过的数据。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.CodedData.op_Implicit(System.String)~Fireasy.Data.CodedData">
            <summary>
            将字符串转换为 <see cref="T:Fireasy.Data.CodedData"/> 对象。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.CodedData.op_Explicit(Fireasy.Data.CodedData)~System.String">
            <summary>
            将 <see cref="T:Fireasy.Data.CodedData"/> 转换为字符串。
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.CodedData.#ctor">
            <summary>
            初始化类 <see cref="T:Fireasy.Data.CodedData"/> 的新实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.CodedData.#ctor(System.String)">
            <summary>
            初始化类 <see cref="T:Fireasy.Data.CodedData"/> 的新实例。
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Fireasy.Data.CodedData.#ctor(System.Byte[])">
            <summary>
            初始化类 <see cref="T:Fireasy.Data.CodedData"/> 的新实例。
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Fireasy.Data.CodedData.Data">
            <summary>
            获取或设置二进制数据。
            </summary>
        </member>
        <member name="M:Fireasy.Data.CodedData.ToString">
            <summary>
            输出字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.CommandBuilder">
            <summary>
            自动生成单表命令，用于将对 <see cref="T:System.Data.DataTable"/> 所做的更改与数据库的更改相协调。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.CommandBuilder.#ctor(Fireasy.Data.Provider.IProvider,System.Data.DataTable,System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>
            使用关联的 <see cref="T:Fireasy.Data.IDatabase"/> 对象初始化一个 <see cref="T:Fireasy.Data.CommandBuilder"/> 类的新实例。
            </summary>
            <param name="provider">当前数据环境中的提供者对象。</param>
            <param name="table">数据表对象。</param>
            <param name="connection">数据库连接对象。</param>
            <param name="transaction">数据库事务对象。</param>
        </member>
        <member name="P:Fireasy.Data.CommandBuilder.SelectCommand">
            <summary>
            获取自动生成的、对数据库执行选择操作所需的 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
        </member>
        <member name="P:Fireasy.Data.CommandBuilder.InsertCommand">
            <summary>
            获取自动生成的、对数据库执行插入操作所需的 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
        </member>
        <member name="P:Fireasy.Data.CommandBuilder.UpdateCommand">
            <summary>
            获取自动生成的、对数据库执行更新操作所需的 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
        </member>
        <member name="P:Fireasy.Data.CommandBuilder.DeleteCommand">
            <summary>
            获取自动生成的、对数据库执行删除操作所需的 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
        </member>
        <member name="M:Fireasy.Data.CommandBuilder.FillAdapter(System.Data.Common.DbDataAdapter)">
            <summary>
            将生成的各命令填充到 <see cref="T:System.Data.Common.DbDataAdapter"/>。
            </summary>
            <param name="adapter">数据适配器。</param>
        </member>
        <member name="T:Fireasy.Data.CommandBuildProxy">
            <summary>
            一个抽象类，用于命令生成的代理。
            </summary>
        </member>
        <member name="T:Fireasy.Data.CommandBuildProxyWithPrimaryKey">
            <summary>
            使用带有主键的 <see cref="T:System.Data.DataTable"/> 生成命令。
            </summary>
        </member>
        <member name="T:Fireasy.Data.CommandBuildProxyWithoutPrimaryKey">
            <summary>
            使用没有任何主键的 <see cref="T:System.Data.DataTable"/> 生成命令。
            </summary>
        </member>
        <member name="T:Fireasy.Data.CommandContext">
            <summary>
            命令上下文对象。无法继承此类。
            </summary>
        </member>
        <member name="P:Fireasy.Data.CommandContext.Database">
            <summary>
            获取 <see cref="T:Fireasy.Data.IDatabase"/> 对象。
            </summary>
        </member>
        <member name="P:Fireasy.Data.CommandContext.Command">
            <summary>
            获取 <see cref="T:System.Data.IDbCommand"/> 对象。
            </summary>
        </member>
        <member name="P:Fireasy.Data.CommandContext.Parameters">
            <summary>
            获取 <see cref="T:Fireasy.Data.ParameterCollection"/> 集合。
            </summary>
        </member>
        <member name="P:Fireasy.Data.CommandContext.Segment">
            <summary>
            获取 <see cref="T:Fireasy.Data.IDataSegment"/> 对象。
            </summary>
        </member>
        <member name="T:Fireasy.Data.CommandException">
            <summary>
            表示执行错误所引发的异常。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.CommandException.#ctor(System.Data.Common.DbCommand,System.Exception)">
            <summary>
            实例化一个 <see cref="T:Fireasy.Data.CommandException"/> 对象。
            </summary>
            <param name="command">执行查询的命令。</param>
            <param name="innerException">所引发的异常源。</param>
        </member>
        <member name="M:Fireasy.Data.CommandException.#ctor(System.Data.Common.DbCommand)">
            <summary>
            实例化一个 <see cref="T:Fireasy.Data.CommandException"/> 对象。
            </summary>
            <param name="command">执行查询的命令。</param>
        </member>
        <member name="P:Fireasy.Data.CommandException.Command">
            <summary>
            获取命令对象。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.BinaryConnectionStore">
            <summary>
            二进制连接字符串存储结构，用于保存由 <see cref="T:Fireasy.Data.Configuration.BinaryInstanceSetting"/> 创建的连接字符串。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.BinaryConnectionStore.ProviderType">
            <summary>
            获取或设置数据提供者类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.BinaryConnectionStore.DatabaseType">
            <summary>
            获取或设置数据库类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.BinaryConnectionStore.ConnectionString">
            <summary>
            获取或设置数据库连接字符串。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.BinaryInstanceSetting">
            <summary>
            一个提供数据库字符串配置的类，使用二进制文件进行配置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.BinaryInstanceSetting.FileName">
            <summary>
            返回二进制文件名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.IInstanceConfigurationSetting">
            <summary>
            数据库配置实例接口。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.IInstanceConfigurationSetting.ProviderName">
            <summary>
            返回提供者配置名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.IInstanceConfigurationSetting.ProviderType">
            <summary>
            返回数据提供者类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.IInstanceConfigurationSetting.DatabaseType">
            <summary>
            返回数据库类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.IInstanceConfigurationSetting.ConnectionString">
            <summary>
            返回数据库连接字符串。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.IInstanceConfigurationSetting.Clusters">
            <summary>
            返回集群连接串配置。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.DefaultInstanceConfigurationSetting">
            <summary>
            缺省的数据库配置实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.DefaultInstanceConfigurationSetting.ProviderName">
            <summary>
            返回提供者配置名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.DefaultInstanceConfigurationSetting.ProviderType">
            <summary>
            返回数据提供者类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.DefaultInstanceConfigurationSetting.DatabaseType">
            <summary>
            返回数据库类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.DefaultInstanceConfigurationSetting.ConnectionString">
            <summary>
            返回数据库连接字符串。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.DefaultInstanceConfigurationSetting.Clusters">
            <summary>
            返回集群配置串。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.ClusteredConnectionSetting">
            <summary>
            连接的集群。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.ClusteredConnectionSetting.Mode">
            <summary>
            获取或设置分布式模式。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.ClusteredConnectionSetting.Weight">
            <summary>
            获取或设置权重。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.ClusteredConnectionSetting.ConnectionString">
            <summary>
            返回数据库连接字符串。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.IInstanceRouteService">
            <summary>
            提供数据库实例配置的路由服务支持
            </summary>
        </member>
        <member name="M:Fireasy.Data.Configuration.IInstanceRouteService.RegisterRoute(System.String)">
            <summary>
            注册路由的匹配路径。
            </summary>
            <param name="match">匹配路径。</param>
        </member>
        <member name="M:Fireasy.Data.Configuration.IInstanceRouteService.GetRoute">
            <summary>
            获取路由的匹配路径。
            </summary>
            <returns>匹配路径。</returns>
        </member>
        <member name="M:Fireasy.Data.Configuration.IInstanceRouteService.GetSetting">
            <summary>
            根据匹配路径从路由服务中获取实例配置。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Configuration.InstanceConfigurationSection">
            <summary>
            数据库实例配置类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Configuration.InstanceConfigurationSection.Initialize(System.Xml.XmlNode)">
            <summary>
            使用配置节点对当前配置进行初始化。
            </summary>
            <param name="section">对应的配置节点。</param>
        </member>
        <member name="M:Fireasy.Data.Configuration.InstanceConfigurationSection.CreateDataInstanceSetting(System.Xml.XmlNode)">
            <summary>
            根据实例名创建相应的配置实例。
            </summary>
            <param name="node">Section节点。</param>
            <returns>返回相应类型的配置实例。</returns>
        </member>
        <member name="T:Fireasy.Data.Configuration.InstanceConfigurationSectionHandler">
            <summary>
            一个处理接口，用于对数据库实例配置的访问处理。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.JsonInstanceSetting">
            <summary>
            一个提供数据库字符串配置的类，使用Json文件进行配置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.JsonInstanceSetting.FileName">
            <summary>
            返回Xml文件名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.RegistryInstanceSetting">
            <summary>
            一个提供数据库字符串配置的类，使用系统注册表进行配置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RegistryInstanceSetting.RootKey">
            <summary>
            获取根键名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RegistryInstanceSetting.SubKey">
            <summary>
            获取子键名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RegistryInstanceSetting.ValueKey">
            <summary>
            获取值的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Configuration.RegistryInstanceSetting.GetRootKey(System.String)">
            <summary>
            将注册表根键名转换成相应的 <see cref="T:Microsoft.Win32.RegistryKey"/> 对象。
            </summary>
            <param name="rootKey"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Configuration.RouteInstanceSetting">
            <summary>
            基于路由服务的数据库实例配置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RouteInstanceSetting.ProviderName">
            <summary>
            返回提供者配置名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RouteInstanceSetting.ProviderType">
            <summary>
            返回数据库类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RouteInstanceSetting.DatabaseType">
            <summary>
            返回数据库类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RouteInstanceSetting.ConnectionString">
            <summary>
            获取数据库连接字符串。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.RouteInstanceSetting.RouteService">
            <summary>
            获取或设置路由服务对象。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.StringInstanceSetting">
            <summary>
            一个提供数据库字符串配置的类，使用配置文件中的字符串进行配置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.StringInstanceSetting.ReferenceType">
            <summary>
            返回字符串的引用类型。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.StringReferenceType">
            <summary>
            字符串引用类别。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Configuration.StringReferenceType.String">
            <summary>
            直接给定的字符串。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Configuration.StringReferenceType.AppSettings">
            <summary>
            使用appSettings配置节。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Configuration.StringReferenceType.ConnectionStrings">
            <summary>
            使用connectionStrings配置节。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Configuration.XmlInstanceSetting">
            <summary>
            一个提供数据库字符串配置的类，使用XML文件进行配置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Configuration.XmlInstanceSetting.FileName">
            <summary>
            返回Xml文件名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.ConnectionException">
            <summary>
            表示由数据库连接引发的异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            实例化一个 <see cref="T:Fireasy.Data.ConnectionException"/> 对象。
            </summary>
            <param name="message">异常的提示信息。</param>
            <param name="innerException">所引发的异常源。</param>
        </member>
        <member name="T:Fireasy.Data.ConnectionParameter">
            <summary>
            表示一个数据库连接的参数。无法继承此类。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionParameter.Server">
            <summary>
            获取或设置服务器。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionParameter.Database">
            <summary>
            获取或设置数据库名。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionParameter.UserId">
            <summary>
            获取或设置用户名。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionParameter.Password">
            <summary>
            获取或设置用户密码。
            </summary>
        </member>
        <member name="T:Fireasy.Data.ConnectionProperties">
            <summary>
            连接字符串的属性字典。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ConnectionProperties.Add(System.String,System.String)">
            <summary>
            添加属性。
            </summary>
            <param name="name">属性名称。</param>
            <param name="value">属性值。</param>
        </member>
        <member name="P:Fireasy.Data.ConnectionProperties.Names">
            <summary>
            获取所有属性名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionProperties.Item(System.String)">
            <summary>
            获取指定名称的属性值。
            </summary>
            <param name="name">属性名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionProperties.TryGetValue(System.String[])">
            <summary>
            尝试在一组名称中获取属性值。
            </summary>
            <param name="names">一个数组，指定可能存在的属性名称。由于连接串可能有多种格式，因此属性名称可能有多个。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionProperties.TryGetValueWithDefaultValue(System.String,System.String[])">
            <summary>
            尝试在一组名称中获取属性值。当这一组值都不存在时，返回 <paramref name="defaultValue"/>。
            </summary>
            <param name="defaultValue">缺省值。</param>
            <param name="names">一个数组，指定可能存在的属性名称。由于连接串可能有多种格式，因此属性名称可能有多个。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionProperties.TrySetValue(System.String,System.String[])">
            <summary>
            尝试设置一组属性的值。
            </summary>
            <param name="value">设置的属性值。</param>
            <param name="names">一个数组，指定可能存在的属性名称。由于连接串可能有多种格式，因此属性名称可能有多个。</param>
        </member>
        <member name="M:Fireasy.Data.ConnectionProperties.ContainsKey(System.String)">
            <summary>
            判断字典中是否包含指定名称的值。
            </summary>
            <param name="name">属性名称。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.ConnectionString">
            <summary>
            扩展的数据库连接字符串。
            </summary>
            <remarks>连接字符串中可使用特殊的名称来标记数据库文件的有效地址，这些标识包含|datadirectory|或来自 <see cref="T:System.Environment.SpecialFolder"/> 枚举项，如|System|、|ApplicationData|，同时，也可以使用../路径命令符。</remarks>
        </member>
        <member name="M:Fireasy.Data.ConnectionString.op_Implicit(System.String)~Fireasy.Data.ConnectionString">
            <summary>
            将连接字符串转换为 <see cref="T:Fireasy.Data.ConnectionString"/> 对象。
            </summary>
            <param name="connectionString">表示连接数据库的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionString.op_Explicit(Fireasy.Data.ConnectionString)~System.String">
            <summary>
            将 <see cref="T:Fireasy.Data.ConnectionString"/> 转换为字符串。
            </summary>
            <param name="connectionString">扩展数据库连接字符串对象。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionString.#ctor(System.String)">
            <summary>
            使用连接字符串初始化 <see cref="T:Fireasy.Data.ConnectionString"/> 类的新实例。
            </summary>
            <param name="connectionString">数据库连接字符串。</param>
            <exception cref="T:System.ArgumentNullException">connectionString 为 null。</exception>
        </member>
        <member name="P:Fireasy.Data.ConnectionString.ProviderType">
            <summary>
            获取数据库提供者类型名称，该名称可以是 <see cref="P:Fireasy.Data.ConnectionString.ProviderType"/> 枚举或实现 <see cref="T:Fireasy.Data.Provider.IProvider"/> 接口的类的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionString.DatabaseType">
            <summary>
            获取数据库类型名称，该类型实现 <see cref="T:Fireasy.Data.IDatabase"/> 接口。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionString.IsTracking">
            <summary>
            获取提供命令执行的调试跟踪支持。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ConnectionString.Properties">
            <summary>
            获取连接字符串的属性字典。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ConnectionString.ToString">
            <summary>
            输出处理过的可用于数据库连接的字符串。
            </summary>
            <returns>数据库连接字符串。</returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionString.Update">
            <summary>
            更新连接字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionString.ParseConnectionString(System.String)">
            <summary>
            解析数据库连接字符串，去除字符串内的 version、|datadirectory| 等参数。
            </summary>
            <param name="constr">配置的源连接字符串。</param>
            <returns>可用于进行数据库连接的字符串。</returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionString.ParseParameter(System.String,System.String)">
            <summary>
            解析参数。
            </summary>
            <param name="name">参数的名称。</param>
            <param name="value">值。</param>
            <returns>如果解析出特有的参数，则为 true。</returns>
        </member>
        <member name="T:Fireasy.Data.ConnectionStringEncryptHelper">
            <summary>
            连接字符串加密/解密辅助类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ConnectionStringEncryptHelper.Encrypt(System.String)">
            <summary>
            对连接字符串进行加密。
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ConnectionStringEncryptHelper.Decrypt(System.String)">
            <summary>
            从数据中解密出连接字符串。
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Converter.ArrayConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个数组。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将数组转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.ArrayConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的数组。</param>
            <param name="dbType">数据列类型。</param>
            <returns></returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为数组时，引发此异常。</exception>
        </member>
        <member name="T:Fireasy.Data.Converter.CodedDataConverter">
            <summary>
            编码数据转换器，用于将一个 <see cref="T:Fireasy.Data.CodedData"/> 对象转换为数据库存储数据，也可以用于反转换。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.CodedDataConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:Fireasy.Data.CodedData"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:Fireasy.Data.CodedData"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.CodedDataConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:Fireasy.Data.CodedData"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>表示 <see cref="T:Fireasy.Data.CodedData"/> 的字节数组。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:Fireasy.Data.CodedData"/> 类型的对象时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.CodedDataConverter.EncodeDataToBytes(Fireasy.Data.CodedData)">
            <summary>
            对数据编码二进制数据。
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Converter.CodedDataConverter.EncodeDataToString(Fireasy.Data.CodedData)">
            <summary>
            对数据编码为字符串。
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Converter.CodedDataConverter.DecodeDataFromBytes(System.Byte[])">
            <summary>
            对二进制的数据进行解码。
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Converter.CodedDataConverter.DecodeDataFromString(System.String)">
            <summary>
            对字符串类型的数据进行解码。
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Converter.ColorConverter">
            <summary>
            颜色转换器，用于将一个 <see cref="T:System.Drawing.Color"/> 对象转换为数据库存储数据，也可以用于反转换。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.ColorConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值，如果 <paramref name="dbType"/> 为 String，则格式为ARGB十六进制字符串；如果 <paramref name="dbType"/> 为 Binary，则为 byte 的数组。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Drawing.Color"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:System.Drawing.Color"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.ColorConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:System.Drawing.Color"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>如果 <paramref name="dbType"/> 为 String，则为ARGB十六进制字符串，如FF0088；如果 <paramref name="dbType"/> 为 Binary，则为长度为 4 的字节数组。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:System.Drawing.Color"/> 类型的对象时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.ColorConverter.ConvertFromString(System.Object)">
            <summary>
            从一个十六进制字符串中解析颜色。
            </summary>
            <param name="value">一个字符串对象。</param>
            <returns>一个 <see cref="T:System.Drawing.Color"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Converter.ColorConverter.ConvertFromBinary(System.Object)">
            <summary>
            从一个数组中解析颜色。
            </summary>
            <param name="value">字节数组。</param>
            <returns>一个 <see cref="T:System.Drawing.Color"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Converter.ColorConverter.ConvertToString(System.Object)">
            <summary>
            转换为十六进制字符串。如F9AC00
            </summary>
            <param name="value">一个 <see cref="T:System.Drawing.Color"/> 对象。</param>
            <returns>字符串对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Converter.ColorConverter.ConvertToBinary(System.Object)">
            <summary>
            转换为数组表示。
            </summary>
            <param name="value">一个 <see cref="T:System.Drawing.Color"/> 对象。</param>
            <returns>字节数组。</returns>
        </member>
        <member name="T:Fireasy.Data.Converter.Configuration.ConverterConfigurationSection">
            <summary>
            表示数据转换器的配置节。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.Configuration.ConverterConfigurationSection.Initialize(System.Xml.XmlNode)">
            <summary>
            使用配置节点对当前配置进行初始化。
            </summary>
            <param name="section">对应的配置节点。</param>
        </member>
        <member name="T:Fireasy.Data.Converter.Configuration.ConverterConfigurationSectionHandler">
            <summary>
            提供对数据转换器配置节的处理。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Converter.Configuration.ConverterConfigurationSetting">
            <summary>
            转换器的配置信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Converter.Configuration.ConverterConfigurationSetting.SourceType">
            <summary>
            获取或设置数据源的类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Converter.Configuration.ConverterConfigurationSetting.ConverterType">
            <summary>
            获取或设置转换器的类型。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Converter.ConverterNotSupportedException">
            <summary>
            当强类型与数据库数据类型的转换不支持时抛出的异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.ConverterNotSupportedException.#ctor(System.Type,System.Data.DbType)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Converter.ConverterNotSupportedException"/> 类的新实例。
            </summary>
            <param name="type">对象的类型。</param>
            <param name="dbType">数据库数据类型。</param>
        </member>
        <member name="T:Fireasy.Data.Converter.ConvertManager">
            <summary>
            转换器管理器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.ConvertManager.GetConverter(System.Type)">
            <summary>
            根据对象类型创建相应的转换器。
            </summary>
            <param name="conversionType">要转换的数据类型。</param>
            <returns>返回一个 <see cref="T:Fireasy.Data.Converter.IValueConverter"/> 实例，如果未找到对应的转换器，则返回 null。</returns>
        </member>
        <member name="M:Fireasy.Data.Converter.ConvertManager.CanConvert(System.Type)">
            <summary>
            判断指定的类型是否支持转换。
            </summary>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Converter.ExceptionConverter">
            <summary>
            异常转换器，用于将一个 <see cref="T:System.Exception"/> 对象转换为数据库存储数据，也可以用于反转换。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.ExceptionConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值，为 <see cref="T:System.Exception"/> 对象序列化后的字节数组。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Exception"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:System.Exception"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.ExceptionConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:System.Exception"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Exception"/> 对象序列化后的字节数组。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:System.Exception"/> 类型的对象时，引发此异常。</exception>
        </member>
        <member name="T:Fireasy.Data.Converter.FontConverter">
            <summary>
            字体转换器，用于将一个 <see cref="T:System.Drawing.Font"/> 对象转换为数据库存储数据，也可以用于反转换。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.FontConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值，格式为 name,size[unit][,style]。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Drawing.Font"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:System.Drawing.Font"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.FontConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:System.Drawing.Font"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>表示 <see cref="T:System.Drawing.Font"/> 对象的字符串。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:System.Drawing.Font"/> 类型的对象时，引发此异常。</exception>
            <remarks>如宋体12px，粗休删除线，可以表示为 宋体,12px,BU。</remarks>
        </member>
        <member name="T:Fireasy.Data.Converter.ImageConverter">
            <summary>
            图像转换器，用于将一个 <see cref="T:System.Drawing.Image"/> 对象转换为数据库存储数据，也可以用于反转换。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.ImageConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Drawing.Image"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:System.Drawing.Image"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.ImageConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:System.Drawing.Image"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>表示 <see cref="T:System.Drawing.Image"/> 的字节数组。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:System.Drawing.Image"/> 类型的对象时，引发此异常。</exception>
        </member>
        <member name="T:Fireasy.Data.Converter.IValueConverter">
            <summary>
            提供两个方法，用于特殊数据的存储与读取。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.IValueConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值。</param>
            <param name="dbType">数据列类型。</param>
            <returns>特定类型的对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Converter.IValueConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的值。</param>
            <param name="dbType">数据列类型。</param>
            <returns>使用 <paramref name="dbType"/> 类型的数据。</returns>
        </member>
        <member name="T:Fireasy.Data.Converter.PointConverter">
            <summary>
            座标转换器，用于将一个 <see cref="T:System.Drawing.Point"/> 对象转换为数据库存储数据，也可以用于反转换。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.PointConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值，格式为 x,y。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Drawing.Point"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:System.Drawing.Point"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.PointConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:System.Drawing.Point"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>使用 x,y 表示 <see cref="T:System.Drawing.Point"/> 对象的字符串。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:System.Drawing.Point"/> 类型的对象时，引发此异常。</exception>
        </member>
        <member name="T:Fireasy.Data.Converter.RectangleConverter">
            <summary>
            矩形转换器，用于将一个 <see cref="T:System.Drawing.Rectangle"/> 对象转换为数据库存储数据，也可以用于反转换。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.RectangleConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值，格式为 x,y,w,h。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Drawing.Rectangle"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:System.Drawing.Rectangle"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.RectangleConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:System.Drawing.Rectangle"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>使用 x,y,w,h 表示 <see cref="T:System.Drawing.Rectangle"/> 对象的字符串。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:System.Drawing.Rectangle"/> 类型的对象时，引发此异常。</exception>
        </member>
        <member name="T:Fireasy.Data.Converter.SizeConverter">
            <summary>
            大小转换器，用于将一个 <see cref="T:System.Drawing.Size"/> 对象转换为数据库存储数据，也可以用于反转换。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Converter.SizeConverter.ConvertFrom(System.Object,System.Data.DbType)">
            <summary>
            将存储的数据转换为指定的类型。
            </summary>
            <param name="value">要转换的值，格式为 w,h。</param>
            <param name="dbType">数据列类型。</param>
            <returns>一个 <see cref="T:System.Drawing.Size"/> 对象。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 <see cref="T:System.Drawing.Size"/> 类型的对象转换为指定的 dbType 数据时，引发此异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Converter.SizeConverter.ConvertTo(System.Object,System.Data.DbType)">
            <summary>
            将特殊对象转换为可存储到数据库的类型。
            </summary>
            <param name="value">要存储的 <see cref="T:System.Drawing.Size"/> 对象。</param>
            <param name="dbType">数据列类型。</param>
            <returns>使用 w,h 表示 <see cref="T:System.Drawing.Size"/> 对象的字符串。</returns>
            <exception cref="T:Fireasy.Data.Converter.ConverterNotSupportedException">如果不支持将 dbType 类型的数据转换为 <see cref="T:System.Drawing.Size"/> 类型的对象时，引发此异常。</exception>
        </member>
        <member name="T:Fireasy.Data.Database">
            <summary>
            提供数据库基本操作的方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Database.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Database"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Database.#ctor(Fireasy.Data.ConnectionString,Fireasy.Data.Provider.IProvider)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Database"/> 类的新实例。
            </summary>
            <param name="connectionString">数据库连接字符串。</param>
            <param name="provider">数据库提供者。</param>
        </member>
        <member name="M:Fireasy.Data.Database.#ctor(System.Collections.Generic.List{Fireasy.Data.DistributedConnectionString},Fireasy.Data.Provider.IProvider)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Database"/> 类的新实例。
            </summary>
            <param name="connectionStrings">数据库连接字符串组。</param>
            <param name="provider">数据库提供者。</param>
        </member>
        <member name="M:Fireasy.Data.Database.Finalize">
            <summary>
            析构函数。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.ConnectionString">
            <summary>
            获取或设置数据库连接字符串。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.DistributedConnectionStrings">
            <summary>
            获取分布式数据库连接字符串组。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.Provider">
            <summary>
            获取数据库提供者。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.Track">
            <summary>
            获取或设置命令执行的跟踪器。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.Log">
            <summary>
            获取或设置日志函数。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.Timeout">
            <summary>
            获取或设置超时时间。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.Transaction">
            <summary>
            获取当前数据库事务。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Database.Connection">
            <summary>
            获取当前数据库链接。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Database.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            使用指定锁定行为启动一个数据库事务。
            </summary>
            <param name="level">事务的锁定行为。</param>
            <returns>如果当前实例首次启动事务，则为 true，否则为 false。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.CommitTransaction">
            <summary>
            如果与方法 BeginTransaction 匹配，则提交数据库事务。
            </summary>
            <returns>成功提交事务则为 true，否则为 false。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.RollbackTransaction">
            <summary>
            如果与方法 BeginTransaction 匹配，则回滚数据库事务。
            </summary>
            <returns>成功回滚事务则为 true，否则为 false。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteDataTable(Fireasy.Data.IQueryCommand,System.String,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本并将结果填充到指定的 <see cref="T:System.Data.DataTable"/> 对象中。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="tableName"><see cref="T:System.Data.DataTable"/> 的名称。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>一个 <see cref="T:System.Data.DataTable"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteEnumerable``1(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection,Fireasy.Data.IDataRowMapper{``0})">
            <summary>
            执行查询文本并将结果以一个 <see cref="T:System.Collections.Generic.IEnumerable`1"/> 的序列返回。
            </summary>
            <typeparam name="T">查询对象类型。</typeparam>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="rowMapper">数据行映射器。</param>
            <returns>一个 <typeparamref name="T"/> 类型的对象的枚举器。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteEnumerable(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            根据自定义的SQL语句查询返回一组动态对象。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>一个动态对象的枚举器。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteNonQuery(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本，返回受影响的记录数。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>所影响的记录数。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteReader(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本并返回一个 <see cref="T:System.Data.IDataReader"/>。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>一个 <see cref="T:System.Data.IDataReader"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteScalar(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteScalar``1(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.FillDataSet(System.Data.DataSet,Fireasy.Data.IQueryCommand,System.String,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本并将结果填充到指定的 <see cref="T:System.Data.DataSet"/> 对象中。
            </summary>
            <param name="dataSet">要填充的 <see cref="T:System.Data.DataSet"/>。</param>
            <param name="queryCommand">查询命令。</param>
            <param name="tableName">表的名称，多个表名称使用逗号分隔。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
        </member>
        <member name="M:Fireasy.Data.Database.TryConnect">
            <summary>
            尝试连接数据库。
            </summary>
            <returns>如果连接成功，则为 null，否则为异常对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.Update(System.Data.DataTable)">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的更改保存到数据库中，这类更改包括新增、修改和删除的数据。
            </summary>
            <param name="dataTable">要更新的数据表对象。</param>
        </member>
        <member name="M:Fireasy.Data.Database.Update(System.Data.DataTable,Fireasy.Data.SqlCommand,Fireasy.Data.SqlCommand,Fireasy.Data.SqlCommand)">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的更改保存到数据库中。
            </summary>
            <param name="dataTable">要更新的数据表对象。</param>
            <param name="insertCommand"></param>
            <param name="updateCommand"></param>
            <param name="deleteCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteNonQueryAsync(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本，返回受影响的记录数。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>所影响的记录数。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteReaderAsync(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本并返回一个 <see cref="T:System.Data.IDataReader"/>。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>一个 <see cref="T:System.Data.IDataReader"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteScalarAsync(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteScalarAsync``1(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.ExecuteEnumerableAsync``1(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection,Fireasy.Data.IDataRowMapper{``0},System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本并将结果以一个 <see cref="T:System.Collections.Generic.IEnumerable`1"/> 的序列返回。
            </summary>
            <typeparam name="T">查询对象类型。</typeparam>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="rowMapper">数据行映射器。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>一个 <typeparamref name="T"/> 类型的对象的枚举器。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.Dispose">
            <summary>
            释放对象所占用的所有资源。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Database.Dispose(System.Boolean)">
            <summary>
            释放对象所占用的非托管和托管资源。
            </summary>
            <param name="disposing">为 true 则释放托管资源和非托管资源；为 false 则仅释放非托管资源。</param>
        </member>
        <member name="M:Fireasy.Data.Database.HandleCommandExecute``1(System.Data.IDbCommand,System.Func{``0})">
            <summary>
            通知应用程序，一个 <see cref="T:System.Data.Common.DbCommand"/> 已经执行。
            </summary>
            <param name="command">所执行的 <see cref="T:System.Data.IDbCommand"/> 对象。</param>
            <param name="func">执行的方法。</param>
        </member>
        <member name="M:Fireasy.Data.Database.OnConnectionStateChanged(System.Data.ConnectionState,System.Data.ConnectionState)">
            <summary>
            通知应用程序，<see cref="T:System.Data.Common.DbConnection"/> 的状态已经改变。
            </summary>
            <param name="originalState">原来的状态。</param>
            <param name="currentState">当前的状态。</param>
        </member>
        <member name="M:Fireasy.Data.Database.CreateDbCommand(System.Data.Common.DbConnection,Fireasy.Data.IQueryCommand,System.Collections.Generic.IEnumerable{Fireasy.Data.Parameter})">
            <summary>
            创建一个 DbCommand 对象。
            </summary>
            <param name="connection"></param>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">参数集合。</param>
            <returns>一个由 <see cref="T:Fireasy.Data.IQueryCommand"/> 和参数集合组成的 <see cref="T:System.Data.Common.DbCommand"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Database.HandleAdapterTableMapping(System.Data.IDataAdapter,System.String)">
            <summary>
            处理表名映射。
            </summary>
            <param name="adapter">适配器。</param>
            <param name="tableName">表的名称。</param>
        </member>
        <member name="M:Fireasy.Data.Database.HandleCommandParameterPrefix(System.String)">
            <summary>
            格式化执行的SQL脚本，将 @ 替换为对应数据库的参数符号。
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Database.HandleSegmentCommand(Fireasy.Data.CommandContext)">
            <summary>
            对执行的SQL脚本使用分页参数。
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Fireasy.Data.Database.HandlePageEvaluator(Fireasy.Data.CommandContext)">
            <summary>
            处理分页评估器。
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Fireasy.Data.Database.HandleFailedLog(System.Data.Common.DbCommand,System.Exception)">
            <summary>
            处理错误日志。
            </summary>
            <param name="command"></param>
            <param name="exp"></param>
        </member>
        <member name="M:Fireasy.Data.Database.HandleLog(System.Data.IDbCommand,System.TimeSpan)">
            <summary>
            处理日志。
            </summary>
            <param name="command"></param>
            <param name="period"></param>
        </member>
        <member name="M:Fireasy.Data.Database.HandleExecuteTask``1(System.Threading.Tasks.Task{``0},System.Data.Common.DbCommand,Fireasy.Data.ParameterCollection)">
            <summary>
            执行完后对 <see cref="T:System.Data.Common.DbCommand"/> 进行参数同步、清理和销毁处理。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="task"></param>
            <param name="command"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.DatabaseFactory">
            <summary>
            <see cref="T:Fireasy.Data.Database"/> 类的创建工厂，用于从配置或提供者类型创建一个 <see cref="T:Fireasy.Data.Database"/> 实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DatabaseFactory.CreateDatabase(System.String)">
            <summary>
            使用配置实例名创建一个 <see cref="T:Fireasy.Data.Database"/> 实例对象。
            </summary>
            <param name="instanceName">配置实例名称。</param>
            <returns>一个 <see cref="T:Fireasy.Data.Database"/> 实例对象。</returns>
        </member>
        <member name="M:Fireasy.Data.DatabaseFactory.CreateDatabase(Fireasy.Data.Configuration.IInstanceConfigurationSetting)">
            <summary>
            使用数据库配置实例创建一个 <see cref="T:Fireasy.Data.Database"/> 实例对象。
            </summary>
            <param name="setting">实例配置对象。</param>
            <returns>一个 <see cref="T:Fireasy.Data.Database"/> 实例对象。</returns>
        </member>
        <member name="M:Fireasy.Data.DatabaseFactory.GetDatabaseFromScope">
            <summary>
            从 <see cref="T:Fireasy.Data.DatabaseScope"/> 中获取 <see cref="T:Fireasy.Data.IDatabase"/> 对象。
            </summary>
            <exception cref="T:Fireasy.Data.UnableGetDatabaseScopeException">DatabaseScope.Current 为 null 时，抛出该异常。</exception>
            <returns>当前线程环境中 <see cref="T:Fireasy.Data.Database"/> 实例对象。</returns>
        </member>
        <member name="M:Fireasy.Data.DatabaseFactory.GetProviderSetting(Fireasy.Data.Configuration.IInstanceConfigurationSetting,Fireasy.Data.Provider.Configuration.ProviderConfigurationSection)">
            <summary>
            获取 Provider 的配置。
            </summary>
            <param name="setting">数据库实例配置对象。</param>
            <param name="section">提供者配置节对象。</param>
            <returns>一个提供者配置对象。</returns>
        </member>
        <member name="M:Fireasy.Data.DatabaseFactory.GetProvider(Fireasy.Data.Configuration.IInstanceConfigurationSetting,Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting)">
            <summary>
            获取 IProvidre，如果没有 setting，则获取预定义类别的 IProvider 单例。
            </summary>
            <param name="setting">数据库实例配置对象。</param>
            <param name="providerSetting">提供者配置对象。</param>
            <returns>一个提供者对象。</returns>
        </member>
        <member name="M:Fireasy.Data.DatabaseFactory.GetDistributedConnections(Fireasy.Data.Configuration.IInstanceConfigurationSetting)">
            <summary>
            获取分布式的数据库连接串。
            </summary>
            <param name="setting"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.DatabaseScope">
            <summary>
            在当前线程范围内检索 <see cref="T:Fireasy.Data.IDatabase"/> 对象。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DatabaseScope.#ctor(Fireasy.Data.IDatabase)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.DatabaseScope"/> 类的新实例。
            </summary>
            <param name="database">当前的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
        </member>
        <member name="P:Fireasy.Data.DatabaseScope.Database">
            <summary>
            返回当前线程内的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。
            </summary>
        </member>
        <member name="P:Fireasy.Data.DatabaseScope.InstanceName">
            <summary>
            获取实例名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.DataPager">
            <summary>
            数据分页类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DataPager.#ctor">
            <summary>
            使用默认每页 20 条记录初始化 <see cref="T:Fireasy.Data.DataPager"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DataPager.#ctor(System.Int32)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.DataPager"/> 类的新实例。
            </summary>
            <param name="pageSize">每页的记录数。</param>
        </member>
        <member name="M:Fireasy.Data.DataPager.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.DataPager"/> 类的新实例。
            </summary>
            <param name="pageSize">每页的记录数。</param>
            <param name="currentPageIndex">当前页索引。</param>
        </member>
        <member name="P:Fireasy.Data.DataPager.Evaluator">
            <summary>
            获取或设置分页评估器。
            </summary>
        </member>
        <member name="P:Fireasy.Data.DataPager.CurrentPageIndex">
            <summary>
            获取或设置当前页码，该值从0开始。
            </summary>
        </member>
        <member name="P:Fireasy.Data.DataPager.PageSize">
            <summary>
            获取或设置每页的记录数。
            </summary>
        </member>
        <member name="P:Fireasy.Data.DataPager.PageCount">
            <summary>
            返回或设置总页数。
            </summary>
        </member>
        <member name="P:Fireasy.Data.DataPager.RecordCount">
            <summary>
            获取或设置记录数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DataPager.ToString">
            <summary>
            输出对象的相关字符串表述。
            </summary>
            <returns>表示记录数、页数和当前页码的文本。</returns>
        </member>
        <member name="P:Fireasy.Data.DataPager.Length">
            <summary>
            获取数据的长度。
            </summary>
        </member>
        <member name="T:Fireasy.Data.DataReaderTypeBuilder">
            <summary>
            根据提供的 <see cref="T:System.Data.IDataReader"/> 对象的结构来生成一个动态类型。
            </summary>
            <remarks><see cref="T:Fireasy.Data.IDatabase"/> 类的非泛型方法 ExecuteEnumerable 会使用该类来创建动态类型。</remarks>
        </member>
        <member name="M:Fireasy.Data.DataReaderTypeBuilder.#ctor(System.Data.IDataReader)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.DataReaderTypeBuilder"/> 类的新实例。
            </summary>
            <param name="dataReader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
        </member>
        <member name="P:Fireasy.Data.DataReaderTypeBuilder.ImplInterfaceTypes">
            <summary>
            获取所生成的类型需要实现的接口类型列表。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DataReaderTypeBuilder.CreateType">
            <summary>
            根据一个 <see cref="T:System.Data.IDataReader"/> 的结构生成一个动态类。
            </summary>
            <returns>由 <see cref="T:System.Data.IDataReader"/> 中数据列所组成属性的动态类型。</returns>
        </member>
        <member name="M:Fireasy.Data.DataReaderTypeBuilder.BuildTypeName(System.Data.IDataReader)">
            <summary>
            根据 <see cref="T:System.Data.IDataReader"/> 生成类型的名称。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>类型的名称。</returns>
            <remarks>名称(Name)为字符串，年龄(Age)为整型，则返回的类型的名称为 Name:18$Age:9。</remarks>
        </member>
        <member name="T:Fireasy.Data.DbUtility">
            <summary>
            实用类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DbUtility.ResolveFullPath(System.String)">
            <summary>
            解析字符串中的带目录的参数值。
            </summary>
            <param name="urlExpression">数据库文件名表达式。</param>
            <example>如 |datadirectory|..\data\db1.mdf &lt;br&gt; |system|db1.mdb 等等。</example>
        </member>
        <member name="M:Fireasy.Data.DbUtility.FormatByQuote(Fireasy.Data.Syntax.ISyntaxProvider,System.String)">
            <summary>
            使用引号标识符格式化表名称或列名称。
            </summary>
            <param name="syntax"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.DbUtility.FindOrderBy(System.String)">
            <summary>
            在命令文本中查找 Order By 子句。
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.DbUtility.CullingOrderBy(System.String)">
            <summary>
            在命令文本中查找 Order By 子句。
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.DefaultCommandTracker">
            <summary>
            默认的命令执行跟踪器。使用 __dbtrack 目录中的文本文件来记录日志。
            </summary>
        </member>
        <member name="T:Fireasy.Data.DefaultRowMapper`1">
            <summary>
            一个缺省的数据行映射器。无法继承此类。
            </summary>
            <typeparam name="T">要转换的类型。</typeparam>
        </member>
        <member name="M:Fireasy.Data.DefaultRowMapper`1.Map(System.Data.IDataReader)">
            <summary>
            将一个 <see cref="T:System.Data.IDataReader"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>由当前 <see cref="T:System.Data.IDataReader"/> 对象中的数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="M:Fireasy.Data.DefaultRowMapper`1.Map(System.Data.DataRow)">
            <summary>
            将一个 <see cref="T:System.Data.DataRow"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="row">一个 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns>由 <see cref="T:System.Data.DataRow"/> 中数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="T:Fireasy.Data.DistributedConnectionManager">
            <summary>
            分布式数据库连接串管理器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DistributedConnectionManager.GetConnection(Fireasy.Data.IDistributedDatabase)">
            <summary>
            根据调度算法从配置中获取一个 <see cref="T:Fireasy.Data.DistributedConnectionString"/> 对象。
            </summary>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.DistributedConnectionString">
            <summary>
            表示分布式的数据库连接串。
            </summary>
        </member>
        <member name="M:Fireasy.Data.DistributedConnectionString.#ctor(System.String)">
            <summary>
            使用连接字符串初始化 <see cref="T:Fireasy.Data.DistributedConnectionString"/> 类的新实例。
            </summary>
            <param name="connectionString">数据库连接字符串。</param>
            <exception cref="T:System.ArgumentNullException">connectionString 为 null。</exception>
        </member>
        <member name="P:Fireasy.Data.DistributedConnectionString.Mode">
            <summary>
            获取或设置分布式模式。
            </summary>
        </member>
        <member name="P:Fireasy.Data.DistributedConnectionString.Weight">
            <summary>
            获取或设置权重。
            </summary>
        </member>
        <member name="T:Fireasy.Data.DistributedMode">
            <summary>
            分布式模式。
            </summary>
        </member>
        <member name="F:Fireasy.Data.DistributedMode.Master">
            <summary>
            主服务器。
            </summary>
        </member>
        <member name="F:Fireasy.Data.DistributedMode.Slave">
            <summary>
            从属服务器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ExpressionRowMapper`1.Map(System.Data.IDataReader)">
            <summary>
            将一个 <see cref="T:System.Data.IDataReader"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>由当前 <see cref="T:System.Data.IDataReader"/> 对象中的数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="M:Fireasy.Data.ExpressionRowMapper`1.Map(System.Data.DataRow)">
            <summary>
            将一个 <see cref="T:System.Data.DataRow"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="row">一个 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns>由 <see cref="T:System.Data.DataRow"/> 中数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="P:Fireasy.Data.ExpressionRowMapper`1.RecordWrapper">
            <summary>
            获取或设置 <see cref="T:Fireasy.Data.RecordWrapper.IRecordWrapper"/>。
            </summary>
        </member>
        <member name="P:Fireasy.Data.ExpressionRowMapper`1.Initializer">
            <summary>
            获取或设置对象的初始化器。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Extensions.DatabaseExtension">
            <summary>
            <see cref="T:Fireasy.Data.IDatabase"/> 的扩展方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Extensions.DatabaseExtension.WithTransaction(Fireasy.Data.IDatabase,System.Action{Fireasy.Data.IDatabase},System.Func{Fireasy.Data.IDatabase,System.Exception,System.Boolean},System.Data.IsolationLevel)">
            <summary>
            开启一个事务，用来执行一组方法。
            </summary>
            <param name="database">当前的 <see cref="T:Fireasy.Data.IDatabase"/>。</param>
            <param name="actExec">要执行的一组方法。</param>
            <param name="funCatch">捕获异常，如果返回 true 则仍抛出异常。</param>
            <param name="level">事务的级别。</param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DatabaseExtension.CreateConnection(Fireasy.Data.IDatabase,Fireasy.Data.DistributedMode)">
            <summary>
            创建一个新的 <see cref="T:System.Data.Common.DbConnection"/> 对象。
            </summary>
            <param name="database"><see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="mode">分布式模式。</param>
            <returns><paramref name="database"/> 创建的 <see cref="T:System.Data.Common.DbConnection"/> 对象。</returns>
        </member>
        <member name="T:Fireasy.Data.Extensions.DataExtension">
            <summary>
            数据相关的扩展方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.ToDataTable(System.Object,System.String)">
            <summary>
            将数组或 <see cref="T:System.Collections.IEnumerable"/> 中的成员转换到 <see cref="T:System.Data.DataTable"/> 对象。
            </summary>
            <param name="data"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.ToInsertSql(System.Data.DataTable)">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 对象输出为 Insert 语句表示。
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.ToArray(System.Data.DataTable)">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 中的数据转换为数组。
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.IsNullOrEmpty(System.Data.DataSet)">
            <summary>
            判断 <see cref="T:System.Data.DataSet"/> 是否为 null 或没有任何的 <see cref="T:System.Data.DataTable"/> 成员。
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.IsNullOrEmpty(System.Data.DataTable)">
            <summary>
            判断 <see cref="T:System.Data.DataTable"/> 是否为 null 或没有任何的 <see cref="T:System.Data.DataRow"/> 成员。
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.EachColumn(System.Data.DataTable,System.Action{System.Data.DataColumn,System.Int32},System.Func{System.Data.DataColumn,System.Boolean})">
            <summary>
            循环取 <see cref="T:System.Data.DataTable"/> 中的 <see cref="T:System.Data.DataColumn"/> 集合。
            </summary>
            <param name="table"></param>
            <param name="action"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.EachColumn(System.Data.DataTable,System.Action{System.Data.DataColumn},System.Func{System.Data.DataColumn,System.Boolean})">
            <summary>
            循环取 <see cref="T:System.Data.DataTable"/> 中的 <see cref="T:System.Data.DataColumn"/> 集合。
            </summary>
            <param name="table"></param>
            <param name="action"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.EachRow(System.Data.DataTable,System.Action{System.Data.DataRow,System.Int32},System.Func{System.Data.DataRow,System.Boolean})">
            <summary>
            循环取 <see cref="T:System.Data.DataTable"/> 中的 <see cref="T:System.Data.DataRow"/> 集合。
            </summary>
            <param name="table"></param>
            <param name="action"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.EachRow(System.Data.DataTable,System.Action{System.Data.DataRow},System.Func{System.Data.DataRow,System.Boolean})">
            <summary>
            循环取 <see cref="T:System.Data.DataTable"/> 中的 <see cref="T:System.Data.DataRow"/> 集合。
            </summary>
            <param name="table"></param>
            <param name="action"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.IsInput(Fireasy.Data.Parameter)">
            <summary>
            判断参数是否为输入型参数。
            </summary>
            <param name="parameter">存储参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.IsOutput(Fireasy.Data.Parameter)">
            <summary>
            判断参数是否为输出型参数。
            </summary>
            <param name="parameter">存储参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.GetDbType(System.Type)">
            <summary>
            获取类型所对应的DbType类型。
            </summary>
            <param name="type">源类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.FromDbType(System.Data.DbType)">
            <summary>
            从 <see cref="T:System.Data.DbType"/> 转换到类型。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.GetDbTypeSize(System.Type,System.Nullable{System.Int32})">
            <summary>
            获取数据类型的大小。
            </summary>
            <param name="type">源类型。</param>
            <param name="defaultSize">默认大小。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.Output(System.Data.IDbCommand)">
            <summary>
            输出 <see cref="T:System.Data.Common.DbCommand"/> 的命令文本及参数。
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.GetCommandType(Fireasy.Data.IQueryCommand)">
            <summary>
            根据命令文本获取 <see cref="T:System.Data.CommandType"/> 类型。
            </summary>
            <param name="queryCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.ClearParameters(System.Data.Common.DbCommand)">
            <summary>
            清理IDbCommand中的参数。
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.SyncParameters(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{Fireasy.Data.Parameter})">
            <summary>
            同步IDbCommand中的输出型参数。
            </summary>
            <param name="command"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.PrepareParameters(System.Data.Common.DbCommand,Fireasy.Data.Provider.IProvider,System.Collections.Generic.IEnumerable{Fireasy.Data.Parameter})">
            <summary>
            将参数添加到DbCommand。
            </summary>
            <param name="command"></param>
            <param name="provider"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.ToDbParameter(Fireasy.Data.Parameter,Fireasy.Data.Provider.IProvider)">
            <summary>
            将自定的Parameter转换到IDataParameter接口
            </summary>
            <param name="sourcePar"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.AddQuerable(Fireasy.Data.ParameterCollection,System.String,System.Object)">
            <summary>
            添加一个作为查询的参数。
            </summary>
            <param name="parameters"></param>
            <param name="parameterName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.FormatInsert(Fireasy.Data.ParameterCollection,System.String)">
            <summary>
            格式化插入语句。
            </summary>
            <param name="parameters"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.FormatUpdate(Fireasy.Data.ParameterCollection,System.String)">
            <summary>
            格式化更新语句。
            </summary>
            <param name="parameters"></param>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.IsDbTypeSupported(System.Type)">
            <summary>
            获取是否支持数据类型。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.IsStringDbType(System.Data.DbType)">
            <summary>
            判断 <paramref name="dbType"/> 是否为字符串类型。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.DataExtension.Condition(Fireasy.Data.IDataSegment,System.String)">
            <summary>
            构造 <see cref="T:Fireasy.Data.IDataSegment"/> 的分页条件。
            </summary>
            <param name="segment"></param>
            <param name="fieldName">分页列名称。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Extensions.ProviderExtension">
            <summary>
            数据库提供者的扩展方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Extensions.ProviderExtension.CreateConnection(Fireasy.Data.Provider.IProvider,System.String)">
            <summary>
            创建一个新的 <see cref="T:System.Data.Common.DbConnection"/> 对象。
            </summary>
            <param name="provider"></param>
            <param name="connectionString">数据库连接字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.ProviderExtension.CreateCommand(Fireasy.Data.Provider.IProvider,System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Data.CommandType,System.Collections.Generic.IEnumerable{Fireasy.Data.Parameter})">
            <summary>
            创建一个新的 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
            <param name="provider"></param>
            <param name="connection"></param>
            <param name="transaction"></param>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Extensions.ProviderExtension.CreateParameter(Fireasy.Data.Provider.IProvider,System.String,System.Object)">
            <summary>
            创建一个新的 <see cref="T:System.Data.Common.DbParameter"/> 对象。
            </summary>
            <param name="provider"></param>
            <param name="parameterName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.FieldRowMapperBase`1">
            <summary>
            一个抽象类，使用 <see cref="T:System.Data.IDataReader"/> 或 <see cref="T:System.Data.DataRow"/> 的相关列索引位置进行映射。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Fireasy.Data.FieldRowMapperBase`1.Map(System.Data.IDataReader)">
            <summary>
            将一个 <see cref="T:System.Data.IDataReader"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>由当前 <see cref="T:System.Data.IDataReader"/> 对象中的数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="M:Fireasy.Data.FieldRowMapperBase`1.Map(System.Data.DataRow)">
            <summary>
            将一个 <see cref="T:System.Data.DataRow"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="row">一个 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns>由 <see cref="T:System.Data.DataRow"/> 中数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="P:Fireasy.Data.FieldRowMapperBase`1.RecordWrapper">
            <summary>
            获取或设置 <see cref="T:Fireasy.Data.RecordWrapper.IRecordWrapper"/>。
            </summary>
        </member>
        <member name="P:Fireasy.Data.FieldRowMapperBase`1.Initializer">
            <summary>
            获取或设置对象的初始化器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.FieldRowMapperBase`1.GetDataReaderFields(System.Data.IDataRecord)">
            <summary>
            获取 <see cref="T:System.Data.IDataRecord"/> 对象中的所有列。
            </summary>
            <param name="reader">当前实例中的 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <returns><see cref="T:System.Data.IDataRecord"/> 对象中所包含的字段名称的数组。</returns>
        </member>
        <member name="M:Fireasy.Data.FieldRowMapperBase`1.GetDataRowFields(System.Data.DataRow)">
            <summary>
            获取 <see cref="T:System.Data.DataRow"/> 对象中的所有列。
            </summary>
            <param name="row">当前实例中的 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns><see cref="T:System.Data.DataRow"/> 对象中所包含的字段名称的数组。</returns>
        </member>
        <member name="M:Fireasy.Data.FieldRowMapperBase`1.IndexOf(System.String[],System.String)">
            <summary>
            获取列在列数组中的索引位置。
            </summary>
            <param name="fields">包含的列数组。</param>
            <param name="fieldName">要检查的列名称。</param>
            <returns>如果列存在于数组中，则为大于或等于 0 的值，否则为 -1。</returns>
        </member>
        <member name="T:Fireasy.Data.GlobalOptions">
            <summary>
            全局的参数设置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.GlobalOptions.AttachQuote">
            <summary>
            获取或设置是否附加逃逸符。默认为 false。
            </summary>
        </member>
        <member name="T:Fireasy.Data.ICommandTracker">
            <summary>
            提供一个用于记录命令执行的跟踪器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ICommandTracker.Write(System.Data.IDbCommand,System.TimeSpan)">
            <summary>
            记录下当前执行的命令和所用的时间。
            </summary>
            <param name="command">当前执行的命令。</param>
            <param name="period">所耗用的时间。</param>
        </member>
        <member name="M:Fireasy.Data.ICommandTracker.Fail(System.Data.IDbCommand,System.Exception)">
            <summary>
            记录下执行失败的命令。
            </summary>
            <param name="command">当前执行的命令。</param>
            <param name="exception"></param>
        </member>
        <member name="T:Fireasy.Data.IDatabase">
            <summary>
            提供一组数据库的基本操作方法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDatabase.ConnectionString">
            <summary>
            获取或设置数据库连接字符串。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDatabase.Provider">
            <summary>
            获取数据库提供者。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDatabase.Timeout">
            <summary>
            获取或设置超时时间。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDatabase.Transaction">
            <summary>
            获取当前数据库事务。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDatabase.Connection">
            <summary>
            获取当前数据库链接。
            </summary>
        </member>
        <member name="M:Fireasy.Data.IDatabase.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            使用指定锁定行为启动一个数据库事务。
            </summary>
            <param name="level">事务的锁定行为。</param>
            <returns>如果当前实例首次启动事务，则为 true，否则为 false。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.CommitTransaction">
            <summary>
            如果与方法 BeginTransaction 匹配，则提交数据库事务。
            </summary>
            <returns>成功提交事务则为 true，否则为 false。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.RollbackTransaction">
            <summary>
            如果与方法 BeginTransaction 匹配，则回滚数据库事务。
            </summary>
            <returns>成功回滚事务则为 true，否则为 false。</returns>
        </member>
        <member name="P:Fireasy.Data.IDatabase.Log">
            <summary>
            获取或设置日志函数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteDataTable(Fireasy.Data.IQueryCommand,System.String,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本并将结果填充到指定的 <see cref="T:System.Data.DataTable"/> 对象中。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="tableName"><see cref="T:System.Data.DataTable"/> 的名称。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>一个 <see cref="T:System.Data.DataTable"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteEnumerable``1(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection,Fireasy.Data.IDataRowMapper{``0})">
            <summary>
            执行查询文本并将结果以一个 <see cref="T:System.Collections.Generic.IEnumerable`1"/> 的序列返回。
            </summary>
            <typeparam name="T">查询对象类型。</typeparam>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="rowMapper">数据行映射器。</param>
            <returns>一个 <typeparamref name="T"/> 类型的对象的枚举器。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteEnumerable(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            根据自定义的SQL语句查询返回一组动态对象。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>一个动态对象的枚举器。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteNonQuery(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本，返回受影响的记录数。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>所影响的记录数。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteReader(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本并返回一个 <see cref="T:System.Data.IDataReader"/>。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>一个 <see cref="T:System.Data.IDataReader"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteScalar(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteScalar``1(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.FillDataSet(System.Data.DataSet,Fireasy.Data.IQueryCommand,System.String,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection)">
            <summary>
            执行查询文本并将结果填充到指定的 <see cref="T:System.Data.DataSet"/> 对象中。
            </summary>
            <param name="dataSet">要填充的 <see cref="T:System.Data.DataSet"/>。</param>
            <param name="queryCommand">查询命令。</param>
            <param name="tableName">表的名称，多个表名称使用逗号分隔。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
        </member>
        <member name="M:Fireasy.Data.IDatabase.Update(System.Data.DataTable)">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的更改保存到数据库中，这类更改包括新增、修改和删除的数据。
            </summary>
            <param name="dataTable">要更新的数据表对象。</param>
        </member>
        <member name="M:Fireasy.Data.IDatabase.Update(System.Data.DataTable,Fireasy.Data.SqlCommand,Fireasy.Data.SqlCommand,Fireasy.Data.SqlCommand)">
            <summary>
            将 <see cref="T:System.Data.DataTable"/> 的更改保存到数据库中。
            </summary>
            <param name="dataTable">要更新的数据表对象。</param>
            <param name="insertCommand"></param>
            <param name="updateCommand"></param>
            <param name="deleteCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.TryConnect">
            <summary>
            尝试连接数据库。
            </summary>
            <returns>如果连接成功，则为 null，否则为异常对象。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteNonQueryAsync(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本，返回受影响的记录数。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>所影响的记录数。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteReaderAsync(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本并返回一个 <see cref="T:System.Data.IDataReader"/>。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>一个 <see cref="T:System.Data.IDataReader"/> 对象。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteScalarAsync(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteScalarAsync``1(Fireasy.Data.IQueryCommand,Fireasy.Data.ParameterCollection,System.Threading.CancellationToken)">
            <summary>
            执行查询文本，并返回第一行的第一列。
            </summary>
            <param name="queryCommand">查询命令。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>第一行的第一列数据。</returns>
        </member>
        <member name="M:Fireasy.Data.IDatabase.ExecuteEnumerableAsync``1(Fireasy.Data.IQueryCommand,Fireasy.Data.IDataSegment,Fireasy.Data.ParameterCollection,Fireasy.Data.IDataRowMapper{``0},System.Threading.CancellationToken)">
            <summary>
            异步执行查询文本并将结果以一个 <see cref="T:System.Collections.Generic.IEnumerable`1"/> 的序列返回。
            </summary>
            <typeparam name="T">查询对象类型。</typeparam>
            <param name="queryCommand">查询命令。</param>
            <param name="segment">数据分段对象。</param>
            <param name="parameters">查询参数集合。</param>
            <param name="rowMapper">数据行映射器。</param>
            <param name="cancellationToken">取消操作的通知。</param>
            <returns>一个 <typeparamref name="T"/> 类型的对象的枚举器。</returns>
        </member>
        <member name="T:Fireasy.Data.IDataPageEvaluatable">
            <summary>
            在使用 <see cref="T:Fireasy.Data.DataPager"/> 对象前对数据量进行评估，以确定数据的分页方式。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDataPageEvaluatable.Evaluator">
            <summary>
            获取或设置评估器。
            </summary>
        </member>
        <member name="T:Fireasy.Data.IDataPageEvaluator">
            <summary>
            提供对数据量进行评估的方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.IDataPageEvaluator.Evaluate(Fireasy.Data.CommandContext)">
            <summary>
            使用上下文对分页对象进行评估。
            </summary>
            <param name="context">当前的命令上下文对象。</param>
        </member>
        <member name="T:Fireasy.Data.IDataRowMapper">
            <summary>
            一个数据行的映射器，用于将数据行转换为对象。
            </summary>
        </member>
        <member name="M:Fireasy.Data.IDataRowMapper.Map(System.Data.IDataReader)">
            <summary>
            将一个 <see cref="T:System.Data.IDataReader"/> 转换为一个对象。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>由当前 <see cref="T:System.Data.IDataReader"/> 对象中的数据转换成对象实例。</returns>
        </member>
        <member name="M:Fireasy.Data.IDataRowMapper.Map(System.Data.DataRow)">
            <summary>
            将一个 <see cref="T:System.Data.DataRow"/> 转换为一个对象。
            </summary>
            <param name="row">一个 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns>由 <see cref="T:System.Data.DataRow"/> 中数据转换成对象实例。</returns>
        </member>
        <member name="P:Fireasy.Data.IDataRowMapper.RecordWrapper">
            <summary>
            获取或设置 <see cref="T:Fireasy.Data.RecordWrapper.IRecordWrapper"/>。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDataRowMapper.Initializer">
            <summary>
            获取或设置对象的初始化器。
            </summary>
        </member>
        <member name="T:Fireasy.Data.IDataRowMapper`1">
            <summary>
            一个数据行的映射器，用于将数据行转换为 <typeparamref name="T"/> 类型的对象。
            </summary>
            <typeparam name="T">要转换的类型。</typeparam>
        </member>
        <member name="M:Fireasy.Data.IDataRowMapper`1.Map(System.Data.IDataReader)">
            <summary>
            将一个 <see cref="T:System.Data.IDataReader"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>由当前 <see cref="T:System.Data.IDataReader"/> 对象中的数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="M:Fireasy.Data.IDataRowMapper`1.Map(System.Data.DataRow)">
            <summary>
            将一个 <see cref="T:System.Data.DataRow"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="row">一个 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns>由 <see cref="T:System.Data.DataRow"/> 中数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="T:Fireasy.Data.IDataSegment">
            <summary>
            提供数据分段的方法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDataSegment.Start">
            <summary>
            获取或设置记录开始的位置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDataSegment.End">
            <summary>
            获取或设置记录终止的位置。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDataSegment.Length">
            <summary>
            获取数据的长度。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Identity.BaseSequenceGenerator">
            <summary>
            使用 SYS_SEQUENCE 表作为序列值的生成器。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Identity.BaseSequenceGenerator.GenerateValue(Fireasy.Data.IDatabase,System.String,System.String)">
            <summary>
            自动生成列的值。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="tableName">表的名称。</param>
            <param name="columnName">列的名称。</param>
            <returns>用于标识唯一性的值。</returns>
        </member>
        <member name="T:Fireasy.Data.Identity.GeneratorCache">
            <summary>
            生成器的缓存。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Identity.GeneratorCache.IsSequenceCreated(System.String,System.String,System.Func{System.Boolean})">
            <summary>
            从缓存里判断序列或表是否已经创建，如果缓存里没有，则调用 <paramref name="checkFunc"/> 去判断。
            </summary>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <param name="checkFunc"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Identity.IGeneratorProvider">
            <summary>
            提供列自动生成的方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Identity.IGeneratorProvider.GenerateValue(Fireasy.Data.IDatabase,System.String,System.String)">
            <summary>
            自动生成列的值。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="tableName">表的名称。</param>
            <param name="columnName">列的名称。</param>
            <returns>用于标识唯一性的值。</returns>
        </member>
        <member name="T:Fireasy.Data.Identity.OracleSequenceGenerator">
            <summary>
            Oracle 中使用序列自动生成列的值。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Identity.OracleSequenceGenerator.GenerateValue(Fireasy.Data.IDatabase,System.String,System.String)">
            <summary>
            自动生成列的值。
            </summary>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="tableName">表的名称。</param>
            <param name="columnName">列的名称。</param>
            <returns>用于标识唯一性的值。</returns>
        </member>
        <member name="M:Fireasy.Data.Identity.OracleSequenceGenerator.FixSequenceName(System.String,System.String)">
            <summary>
            截断序列名称
            </summary>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.IDistributedDatabase">
            <summary>
            提供分布式数据库连接支持。
            </summary>
        </member>
        <member name="P:Fireasy.Data.IDistributedDatabase.DistributedConnectionStrings">
            <summary>
            获取分布式数据库连接字符串组。
            </summary>
        </member>
        <member name="T:Fireasy.Data.IPropertyFieldMappingResolver">
            <summary>
            提供从对象类型中获取字段名称及数据类型的方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.IPropertyFieldMappingResolver.GetDbMapping">
            <summary>
            获取字段名称和数据类型的映射字典。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.PropertyFieldMapping">
            <summary>
            对象和字段的映射。
            </summary>
        </member>
        <member name="M:Fireasy.Data.PropertyFieldMapping.#ctor(System.String,System.String,System.Type,System.Data.DbType)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.PropertyFieldMapping"/> 类的新实例。
            </summary>
            <param name="propertyName">属性的名称。</param>
            <param name="fieldName">字段的名称。</param>
            <param name="propertyType">属性的类型。</param>
            <param name="dbType">字段的数据类型。</param>
        </member>
        <member name="P:Fireasy.Data.PropertyFieldMapping.PropertyName">
            <summary>
            获取或设置属性的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.PropertyFieldMapping.FieldName">
            <summary>
            获取或设置字段的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.PropertyFieldMapping.PropertyType">
            <summary>
            获取或设置属性的类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.PropertyFieldMapping.FieldType">
            <summary>
            获取或设置字段的数据类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.PropertyFieldMapping.ValueFunc">
            <summary>
            获取或设置获取值的函数。
            </summary>
        </member>
        <member name="T:Fireasy.Data.IQueryCommand">
            <summary>
            提供给 <see cref="T:Fireasy.Data.IDatabase"/> 查询的对象。
            </summary>
        </member>
        <member name="T:Fireasy.Data.NoDisposeDatabase">
            <summary>
            提供一个 <see cref="T:Fireasy.Data.IDatabase"/> 的包装，在 Dispose 时不调用实际的销毁方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.NoDisposeDatabase.#ctor(Fireasy.Data.IDatabase)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.NoDisposeDatabase"/> 类的新实例。
            </summary>
            <param name="database">受包装的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
        </member>
        <member name="T:Fireasy.Data.Parameter">
            <summary>
            查询参数。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Parameter.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Parameter"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Parameter.#ctor(System.String)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Parameter"/> 类的新实例。
            </summary>
            <param name="parameterName">参数名。</param>
        </member>
        <member name="M:Fireasy.Data.Parameter.#ctor(System.String,System.Object)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Parameter"/> 类的新实例。
            </summary>
            <param name="parameterName">参数名。</param>
            <param name="value">参数值。</param>
        </member>
        <member name="P:Fireasy.Data.Parameter.ParameterName">
            <summary>
            获取或设置参数名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.Direction">
            <summary>
            获取或设置参数的方向。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.Value">
            <summary>
            获取或设置参数的值。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.DbType">
            <summary>
            获取或设置参数的数据类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.IsNullable">
            <summary>
             获取或设置该值指示参数是否接受空值。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.SourceColumn">
            <summary>
            获取或设置源列的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.SourceVersion">
            <summary>
            获取或设置加载 Value 时使用的 <see cref="T:System.Data.DataRowVersion"></see>。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.Precision">
            <summary>
            获取或设置alue 属性的最大位数。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.Scale">
            <summary>
            获取或设置Value的小数位数。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Parameter.Size">
            <summary>
            获取或设置参数的数据长度。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Parameter.Clone">
            <summary>
            将参数复制一个副本。
            </summary>
            <returns>一个 <see cref="T:Fireasy.Data.Parameter"/> 的浅表副本。</returns>
        </member>
        <member name="T:Fireasy.Data.ParameterCollection">
            <summary>
            查询参数集合。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.#ctor(System.Object[])">
            <summary>
            使用对象数组实例化参数集合，该实例化方法产生的参数将以'p'及索引进行命名。
            </summary>
            <param name="parameters">参数值数组。</param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.#ctor(System.Collections.Generic.IEnumerable{Fireasy.Data.Parameter})">
            <summary>
            使用一个参数集合初始化类的新实例。
            </summary>
            <param name="parameters">一个 <see cref="T:Fireasy.Data.ParameterCollection"/> 对象。</param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.#ctor(System.Object)">
            <summary>
            使用一个对象初始化参数集合，该实例化方法产生的参数将以对象的属性名称进行命名。
            </summary>
            <param name="paramters"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            使用一个字典对象初始化参数集合，该实例化方法产生的参数将以对象的属性名称进行命名。
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.op_Addition(Fireasy.Data.ParameterCollection,Fireasy.Data.ParameterCollection)">
            <summary>
            参数集合1与参数集合2相加。
            </summary>
            <param name="coll1">参数集合1。</param>
            <param name="coll2">参数集合2。</param>
            <returns>新的参数集合。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.op_Subtraction(Fireasy.Data.ParameterCollection,Fireasy.Data.ParameterCollection)">
            <summary>
            从参数集合1中减去参数集合2。
            </summary>
            <param name="coll1">参数集合1。</param>
            <param name="coll2">参数集合2。</param>
            <returns>新的参数集合</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.op_Explicit(Fireasy.Data.ParameterCollection)~System.Collections.Generic.Dictionary{System.String,System.Object}">
            <summary>
            将一个 <see cref="T:Fireasy.Data.ParameterCollection"/> 对象转换为 <see cref="T:System.Collections.IDictionary"/> 对象。
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.op_Implicit(System.Collections.Generic.Dictionary{System.String,System.Object})~Fireasy.Data.ParameterCollection">
            <summary>
            将一个 <see cref="T:System.Collections.IDictionary"/> 对象转换为 <see cref="T:Fireasy.Data.ParameterCollection"/> 对象。
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Clone">
            <summary>
            将此参数集合克隆一份副本。
            </summary>
            <returns>新的参数集合。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Clear">
            <summary>
            清除集合中的所有参数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Contains(Fireasy.Data.Parameter)">
            <summary>
            确定对象是否存在于当前参数集合中。
            </summary>
            <param name="parameter">要判断的参数对象。</param>
            <returns>如果存在返回 true，否则返回 false。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.CopyTo(Fireasy.Data.Parameter[],System.Int32)">
            <summary>
            将集合中的所有参数复制到数组中。
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="P:Fireasy.Data.ParameterCollection.Count">
            <summary>
            获取元素的个数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.ContainsKey(System.String)">
            <summary>
            使用参数名来判断是否包含指定的项。
            </summary>
            <param name="parameterName">欲判断的参数名称。</param>
            <returns>如果存在返回 true，否则返回 false。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.TryGetParameter(System.Object,Fireasy.Data.Parameter@)">
            <summary>
            根据值查看集合内的参数。
            </summary>
            <param name="value">欲判断参数值。</param>
            <param name="parameter">查找到的参数。</param>
            <returns>如果存在则为 true。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Add(Fireasy.Data.Parameter)">
            <summary>
            添加参数对象。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Add``1(System.String,System.String,``0)">
            <summary>
            添加参数对象，用于输入型参数。
            </summary>
            <param name="parameterName">参数名称。</param>
            <param name="sourceColumn">源列名称。</param>
            <param name="value">参数的值。</param>
            <returns>返回参数对象。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Add``1(System.String,``0)">
            <summary>
            添加参数对象，用于输入型参数。
            </summary>
            <param name="parameterName">参数名称。</param>
            <param name="value">参数的值。</param>
            <returns>返回参数对象。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.AddInOut``1(System.String,System.String,``0,System.Int32)">
            <summary>
            添加输入输出型参数对象。
            </summary>
            <param name="parameterName">参数名称。</param>
            <param name="sourceColumn">源列名称。</param>
            <param name="value">参数的值。</param>
            <param name="size">数据长度，如果为固定长度数据类型，可使用默认值0。</param>
            <returns>参数对象。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.AddReturn(System.String,System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加返回型参数对象。
            </summary>
            <param name="parameterName">参数名称。</param>
            <param name="sourceColumn">源列名称。</param>
            <param name="dbType">参数的数据类型。</param>
            <param name="size">数据长度，如果为固定长度数据类型，可使用默认值0。</param>
            <returns>参数对象。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.AddOut(System.String,System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加输出型参数对象。
            </summary>
            <param name="parameterName">参数名称。</param>
            <param name="sourceColumn">源列名称。</param>
            <param name="dbType">参数的数据类型。</param>
            <param name="size">数据长度。</param>
            <returns>参数对象。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Add``1(System.String,System.String,``0,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.Data.ParameterDirection)">
            <summary>
            添加参数对象，用于输入输出型参数。
            </summary>
            <param name="parameterName">参数名称。</param>
            <param name="sourceColumn">源列名称。</param>
            <param name="value">参数的值。</param>
            <param name="dbType">参数的值类型。</param>
            <param name="size">数据长度。</param>
            <param name="direction">参数的方向。</param>
            <returns>参数对象。</returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Add(Fireasy.Data.ParameterCollection)">
            <summary>
            从一个参数集合中添加对象。
            </summary>
            <param name="parameters">另一个参数集合。</param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.AddRange(Fireasy.Data.Parameter[])">
            <summary>
            将一个参数数组添加到集合中。
            </summary>
            <param name="parameters">提供的参数数组。</param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Remove(Fireasy.Data.Parameter)">
            <summary>
            移除一个参数对象。
            </summary>
            <param name="parameter">要移除的参数对象。</param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Remove(System.String)">
            <summary>
            移除指定名称的查询参数。
            </summary>
            <param name="parameterName">参数名称。</param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.IndexOf(Fireasy.Data.Parameter)">
            <summary>
            搜索指定的查询参数在集合中的索引位置。
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.IndexOf(System.String)">
            <summary>
            搜索指定参数名称所在集合中的索引位置。
            </summary>
            <param name="parameterName">参数名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.Insert(System.Int32,Fireasy.Data.Parameter)">
            <summary>
            在指定的索引位置处插入一个查询参数。
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.RemoveAt(System.Int32)">
            <summary>
            移除指定索引位置处的查询参数。
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Fireasy.Data.ParameterCollection.Item(System.Int32)">
            <summary>
            根据索引值获取索引器的值。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fireasy.Data.ParameterCollection.Item(System.String)">
            <summary>
            根据参数名获取索引器的值。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ParameterCollection.GetEnumerator">
            <summary>
            获取查询参数的枚举器。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.ProcedureCommand">
            <summary>
            表示使用存储过程的查询语句。
            </summary>
        </member>
        <member name="M:Fireasy.Data.ProcedureCommand.op_Implicit(System.String)~Fireasy.Data.ProcedureCommand">
            <summary>
            将字符串转换为 <see cref="T:Fireasy.Data.ProcedureCommand"/> 实例。
            </summary>
            <param name="procedureName">存储过程的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ProcedureCommand.op_Explicit(Fireasy.Data.ProcedureCommand)~System.String">
            <summary>
            将 <see cref="T:Fireasy.Data.ProcedureCommand"/> 转换为字符串。
            </summary>
            <param name="proCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.ProcedureCommand.#ctor(System.String)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.ProcedureCommand"/> 类的新实例。
            </summary>
            <param name="procedureName">存储过程的名称。</param>
        </member>
        <member name="M:Fireasy.Data.ProcedureCommand.ToString">
            <summary>
            输出字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.AssemblyLoader">
            <summary>
            用于从外部程序集中加载 <see cref="T:System.Data.Common.DbProviderFactory"/> 对象。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.AssemblyLoader.TryLoad(System.String,System.Data.Common.DbProviderFactory@)">
            <summary>
            根据类全名加载 <see cref="T:System.Data.Common.DbProviderFactory"/> 对象。
            </summary>
            <param name="typeName">类的全名。</param>
            <param name="factory"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.Configuration.ProviderConfigurationSection">
            <summary>
            表示数据库提供者的配置节。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.Configuration.ProviderConfigurationSection.Initialize(System.Xml.XmlNode)">
            <summary>
            使用配置节点对当前配置进行初始化。
            </summary>
            <param name="section">对应的配置节点。</param>
        </member>
        <member name="M:Fireasy.Data.Provider.Configuration.ProviderConfigurationSection.LoadServices(System.Xml.XmlNode)">
            <summary>
            循环节点provider\service，将服务类添加到配置的服务集合中。
            </summary>
            <param name="section">provider 节点。</param>
        </member>
        <member name="T:Fireasy.Data.Provider.Configuration.ProviderConfigurationSectionHandler">
            <summary>
            提供对数据库提供者配置节的处理。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting">
            <summary>
            提供者的配置。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting"/> 类的新实例。
            </summary>
            <param name="services"></param>
        </member>
        <member name="P:Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting.Name">
            <summary>
            获取或设置配置的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting.Type">
            <summary>
            获取或设置提供者的类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting.InheritedProvider">
            <summary>
            获取或设置继承自的提供者名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.Configuration.ProviderConfigurationSetting.ServiceTypes">
            <summary>
            获取提供服务的类型列表。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Provider.DB2Provider">
            <summary>
            DB2数据库提供者。使用 IBM.Data.DB2 提供。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.DB2Provider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.DB2Provider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.DB2Provider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.DB2Provider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.DB2Provider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.DB2Provider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.DB2Provider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.FirebirdProvider">
            <summary>
            Firebird数据库提供者。使用 FirebirdSql.Data.FirebirdClient 提供。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.FirebirdProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.FirebirdProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.FirebirdProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.PostgreSqlProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.FirebirdProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.FirebirdProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.FirebirdProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.MsSqlProvider">
            <summary>
            MsSql数据库提供者。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.MsSqlProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.MsSqlProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.MsSqlProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.MsSqlProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.MsSqlProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.MsSqlProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.MsSqlProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.MySqlProvider">
            <summary>
            MySql或MairaDB数据库提供者。使用 MySql.Data 提供。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.MySqlProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.MySqlProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.MySqlProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.MySqlProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.MySqlProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.MySqlProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.MySqlProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.OdbcProvider">
            <summary>
            Odbc数据库提供者。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.OdbcProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.OdbcProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.OdbcProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.OdbcProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.OdbcProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.OdbcProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.OdbcProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.OleDbProvider">
            <summary>
            OleDb数据库提供者。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.OleDbProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.OleDbProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.OleDbProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.OleDbProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.OleDbProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.OleDbProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.OleDbProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.OracleProvider">
            <summary>
            Oracle数据库提供者。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.OracleProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.OracleProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.OracleProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.OracleProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.OracleProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.OracleProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.OracleProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.OracleProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            处理 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.PostgreSqlProvider">
            <summary>
            PostgreSql数据库提供者。使用 Npgsql 提供。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.PostgreSqlProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.PostgreSqlProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.PostgreSqlProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.PostgreSqlProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.PostgreSqlProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.PostgreSqlProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.PostgreSqlProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.SQLiteProvider">
            <summary>
            SQLite数据库提供者。使用 System.Data.SQLite 提供。
            </summary>
        </member>
        <member name="F:Fireasy.Data.Provider.SQLiteProvider.Instance">
            <summary>
            提供 <see cref="T:Fireasy.Data.Provider.SQLiteProvider"/> 的静态实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.SQLiteProvider.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.SQLiteProvider"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.SQLiteProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.SQLiteProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.SQLiteProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.IProvider">
            <summary>
            为不同的数据库类型提供创建工厂及插件服务。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.IProvider.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.IProvider.DbProviderFactory">
            <summary>
            获取数据库提供者工厂。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <returns>连接字符串参数对象。</returns>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.GetService``1">
            <summary>
            获取注册到数据库提供者的插件服务实例。
            </summary>
            <typeparam name="TProvider">插件服务的类型。</typeparam>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.RegisterService(System.Type)">
            <summary>
            注册插件服务类型。
            </summary>
            <param name="serviceType">服务类型。</param>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.RegisterService(System.Type,Fireasy.Data.Provider.IProviderService)">
            <summary>
            注册指定类型的插件服务。
            </summary>
            <param name="definedType"></param>
            <param name="service"></param>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.GetServices">
            <summary>
            获取注册到数据库提供者的所有插件服务。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.PrepareConnection(System.Data.Common.DbConnection)">
            <summary>
            处理 <see cref="T:System.Data.Common.DbConnection"/> 对象。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            处理 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.IProvider.PrepareParameter(System.Data.Common.DbParameter)">
            <summary>
            处理 <see cref="T:System.Data.Common.DbParameter"/> 对象。
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.IProviderFactoryResolver">
            <summary>
            定义 <see cref="T:System.Data.Common.DbProviderFactory"/> 的解析来源。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.IProviderFactoryResolver.Resolve">
            <summary>
            解析返回 <see cref="T:System.Data.Common.DbProviderFactory"/> 对象。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fireasy.Data.Provider.IProviderFactoryResolver.Exception">
            <summary>
            获取解析失败时的异常信息。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Provider.InstallerProviderFactoryResolver">
            <summary>
            通过 DbProviderFactories.GetFactory 从系统环境中安装的驱动中解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.InstallerProviderFactoryResolver.#ctor(System.String)">
            <summary>
            初始化类 <see cref="T:Fireasy.Data.Provider.InstallerProviderFactoryResolver"/> 类的新实例。
            </summary>
            <param name="providerName">固定的驱动名称。</param>
        </member>
        <member name="T:Fireasy.Data.Provider.AssemblyProviderFactoryResolver">
            <summary>
            从本地一组程序集中动态加载解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.AssemblyProviderFactoryResolver.#ctor(System.String[])">
            <summary>
            初始化类 <see cref="T:Fireasy.Data.Provider.AssemblyProviderFactoryResolver"/> 类的新实例。
            </summary>
            <param name="typeNames">一组程序集标识。</param>
        </member>
        <member name="T:Fireasy.Data.Provider.IProviderService">
            <summary>
            提供者插件服务接口。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.IProviderService.Provider">
            <summary>
            获取或设置当前的 <see cref="T:Fireasy.Data.Provider.IProvider"/> 实例。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Provider.ProviderBase">
            <summary>
            基本的数据库提供者。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Provider.ProviderBase"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.#ctor(Fireasy.Data.Provider.IProviderFactoryResolver[])">
            <summary>
            使用提供者名称初始化 <see cref="T:Fireasy.Data.Provider.ProviderBase"/> 类的新实例。
            </summary>
            <param name="resolvers"></param>
        </member>
        <member name="P:Fireasy.Data.Provider.ProviderBase.DbName">
            <summary>
            获取描述数据库的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Provider.ProviderBase.DbProviderFactory">
            <summary>
            获取数据库提供者工厂。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.GetConnectionParameter(Fireasy.Data.ConnectionString)">
            <summary>
            获取当前连接的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.UpdateConnectionString(Fireasy.Data.ConnectionString,Fireasy.Data.ConnectionParameter)">
            <summary>
            使用参数更新指定的连接。
            </summary>
            <param name="connectionString">连接字符串对象。</param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.GetService``1">
            <summary>
            获取注册到数据库提供者的插件服务实例。
            </summary>
            <typeparam name="TProvider">插件服务的类型。</typeparam>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.GetServices">
            <summary>
            获取注册到数据库提供者的所有插件服务。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.RegisterService``2">
            <summary>
            注册指定类型的插件服务。
            </summary>
            <typeparam name="TDefined"></typeparam>
            <typeparam name="TImplement"></typeparam>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.RegisterService``1(``0)">
            <summary>
            注册指定类型的插件服务。
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="provider"></param>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.RegisterService(System.Type,Fireasy.Data.Provider.IProviderService)">
            <summary>
            注册指定类型的插件服务。
            </summary>
            <param name="definedType"></param>
            <param name="service"></param>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.RegisterService(System.Type)">
            <summary>
            注册插件服务类型。
            </summary>
            <param name="serviceType">服务类型。</param>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.PrepareConnection(System.Data.Common.DbConnection)">
            <summary>
            处理 <see cref="T:System.Data.Common.DbConnection"/> 对象。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            处理 <see cref="T:System.Data.Common.DbCommand"/> 对象。
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.PrepareParameter(System.Data.Common.DbParameter)">
            <summary>
            处理 <see cref="T:System.Data.Common.DbParameter"/> 对象。
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderBase.InitDbProviderFactory">
            <summary>
            初始化 <see cref="P:Fireasy.Data.Provider.ProviderBase.DbProviderFactory"/> 对象。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Provider.ProviderHelper">
            <summary>
            <see cref="T:Fireasy.Data.Provider.IProvider"/> 的辅助类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderHelper.GetDefinedProviderInstance(System.String)">
            <summary>
            根据 <paramref name="providerName"/> 获取对应的 <see cref="T:Fireasy.Data.Provider.IProvider"/> 对象。
            </summary>
            <param name="providerName">提供者名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderHelper.RegisterProvider(System.String,Fireasy.Data.Provider.IProvider)">
            <summary>
            使用代码注册一个 <see cref="T:Fireasy.Data.Provider.IProvider"/> 对象。
            </summary>
            <param name="providerName">提供者名称。</param>
            <param name="provider">提供者对象。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderHelper.GetSupportedProviders">
            <summary>
            获取所提供的所有数据库提供者名称。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderHelper.InitializeProviders">
            <summary>
            初始化提供者。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Provider.ProviderHelper.RegisterCustomProviders(Fireasy.Data.Provider.Configuration.ProviderConfigurationSection)">
            <summary>
            使用配置注册自定义的插件服务。
            </summary>
            <param name="section">提供者的配置对象。</param>
        </member>
        <member name="T:Fireasy.Data.Provider.ProviderType">
            <summary>
            内置的数据库提供者类型。
            </summary>
        </member>
        <member name="M:Fireasy.Data.RecordWrapHelper.GetGetValueMethod(System.Type)">
            <summary>
            根据值的类型返回获取值的方法。
            </summary>
            <param name="dataType">值的数据类型。</param>
            <returns>对应的 <see cref="T:Fireasy.Data.RecordWrapper.IRecordWrapper"/> 所提供的方法。</returns>
        </member>
        <member name="T:Fireasy.Data.RecordWrapper.GeneralRecordWrapper">
            <summary>
            一个通用的记录包装器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetFieldName(System.Data.IDataReader,System.Int32)">
            <summary>
            获取指定索引处的字段名称。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetValue(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>该字段包含的对象。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetValue(System.Data.IDataRecord,System.String)">
            <summary>
            返回指定字段的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>该字段包含的对象。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetBoolean(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定列的布尔值形式的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetBoolean(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的布尔值形式的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetByte(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定列的 8 位无符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetByte(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的 8 位无符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetBytes(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的字节数组。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 数组值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetBytes(System.Data.IDataRecord,System.String)">
            <summary>
            返回指定字段的字节数组。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetChar(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Char"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetChar(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetChars(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的字符数组。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Char"/> 数组值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetGuid(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的 GUID 值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Guid"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetInt16(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的 16 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int16"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetInt16(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetInt32(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的 32 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int32"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetInt32(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetInt64(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的 64 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int64"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetInt64(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetFloat(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的单精度浮点数。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Single"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetFloat(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetDouble(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的双精度浮点数。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Double"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetDouble(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetString(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的字符串值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.String"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetString(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetDecimal(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的固定位置的数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Decimal"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetDecimal(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetDateTime(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的固定位置的日期和时间。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.DateTime"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.GetDateTime(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的固定位置的日期和时间。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.GeneralRecordWrapper.IsDbNull(System.Data.IDataReader,System.Int32)">
            <summary>
            判断指定索引位置的字段值是否为 DBNull。
            </summary>
            <param name="reader"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.RecordWrapper.IRecordWrapper">
            <summary>
            记录包装器，由于各 <see cref="T:System.Data.IDataReader"/> 对数据类型的支持可能不一样，因此需要处理以使数据达到兼容。
            </summary>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetFieldName(System.Data.IDataReader,System.Int32)">
            <summary>
            获取指定索引处的字段名称。
            </summary>
            <param name="reader"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetValue(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>该字段包含的对象。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetValue(System.Data.IDataRecord,System.String)">
            <summary>
            返回指定字段的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>该字段包含的对象。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetBoolean(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定列的布尔值形式的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetBoolean(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的布尔值形式的值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetByte(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定列的 8 位无符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetByte(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的 8 位无符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetBytes(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的字节数组。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 数组值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetBytes(System.Data.IDataRecord,System.String)">
            <summary>
            返回指定字段的字节数组。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 数组值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetChar(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Char"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetChar(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定列的字符值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Char"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetChars(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的字符数组。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Char"/> 数组值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetGuid(System.Data.IDataRecord,System.Int32)">
            <summary>
            返回指定字段的 GUID 值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Guid"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetInt16(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的 16 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int16"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetInt16(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的 16 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Int16"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetInt32(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的 32 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int32"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetInt32(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的 32 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Int32"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetInt64(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的 64 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int64"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetInt64(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的 64 位有符号整数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Int64"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetFloat(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的单精度浮点数。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Single"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetFloat(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的单精度浮点数。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Single"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetDouble(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的双精度浮点数。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Double"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetDouble(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的双精度浮点数。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Double"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetString(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的字符串值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.String"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetString(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的字符串值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.String"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetDecimal(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的固定位置的数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Decimal"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetDecimal(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的固定位置的数值。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.Decimal"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetDateTime(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取指定字段的固定位置的日期和时间。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.DateTime"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.GetDateTime(System.Data.IDataRecord,System.String)">
            <summary>
            获取指定字段的固定位置的日期和时间。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="name">字段的名称。</param>
            <returns>字段的 <see cref="T:System.DateTime"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.IRecordWrapper.IsDbNull(System.Data.IDataReader,System.Int32)">
            <summary>
            判断指定索引位置的字段值是否为 DBNull。
            </summary>
            <param name="reader"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper">
            <summary>
            OracleAccess 的记录包装器。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetBoolean(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取布尔值。由于 Oracle 没有该数据类型，只能使用数值型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetByte(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取字节值。由于 Oracle 没有该数据类型，只能使用数值型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetChar(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取字符值。由于 Oracle 没有该数据类型，只能使用字符串进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Char"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetInt32(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取长整型值。由于 Oracle 没有该数据类型，只能使用数值型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int32"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetInt16(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取短整型值。由于 Oracle 没有该数据类型，只能使用数值型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int16"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetInt64(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取长整型值。由于 Oracle 没有该数据类型，只能使用数值型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int64"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetDouble(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取双精度值。由于 Oracle 没有该数据类型，只能使用数值型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Double"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleAccessRecordWrapper.GetFloat(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取单精度值。由于 Oracle 没有该数据类型，只能使用数值型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Single"/> 值。</returns>
        </member>
        <member name="T:Fireasy.Data.RecordWrapper.OracleRecordWrapper">
            <summary>
            Oracle 的记录包装器。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleRecordWrapper.GetBoolean(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取布尔值。由于 Oracle 没有该数据类型，只能使用整型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Boolean"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleRecordWrapper.GetByte(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取字节值。由于 Oracle 没有该数据类型，只能使用整型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Byte"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleRecordWrapper.GetChar(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取字符值。由于 Oracle 没有该数据类型，只能使用字符串进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Char"/> 值。</returns>
        </member>
        <member name="M:Fireasy.Data.RecordWrapper.OracleRecordWrapper.GetInt16(System.Data.IDataRecord,System.Int32)">
            <summary>
            获取短整型值。由于 Oracle 没有该数据类型，只能使用整型进行转换。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataRecord"/> 对象。</param>
            <param name="i">字段的索引。</param>
            <returns>字段的 <see cref="T:System.Int16"/> 值。</returns>
        </member>
        <member name="T:Fireasy.Data.RowMapperCastException">
            <summary>
            <see cref="T:Fireasy.Data.IDataRowMapper"/> 读取指定名称的字段时，无法转换到相应的类型时抛出此异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.RowMapperCastException.#ctor(System.String,System.Type,System.Exception)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.RowMapperCastException"/> 类的新实例。
            </summary>
            <param name="name">IDataReader 或 DataRow 中的字段名称。</param>
            <param name="castType">预期转换的类型。</param>
            <param name="innerException">内部异常信息。</param>
        </member>
        <member name="T:Fireasy.Data.Schema.Column">
            <summary>
            数据库列信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Catalog">
            <summary>
            获取表分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Schema">
            <summary>
            获取表架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.TableName">
            <summary>
            获取表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Name">
            <summary>
            获取列名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Description">
            <summary>
            获取列描述。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.DataType">
            <summary>
            获取数据类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Default">
            <summary>
            获取默认值。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.NumericPrecision">
            <summary>
            获取小数精度。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.NumericScale">
            <summary>
            获取小数范围。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Length">
            <summary>
            获取列长度。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.IsNullable">
            <summary>
            获取是否可为空。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.IsPrimaryKey">
            <summary>
            获取是否为主键值。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Autoincrement">
            <summary>
            获取是否为自增长型列。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Column.Position">
            <summary>
            获取列的位置。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.Database">
            <summary>
            数据库信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Database.Name">
            <summary>
            获取或设置数据库名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Database.CreateDate">
            <summary>
            获取或设置创建时间。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.DataType">
            <summary>
            数据库数据类型信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.DataType.Name">
            <summary>
            获取数据类型名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.DataType.DbType">
            <summary>
            获取数据类型对应的 <see cref="T:System.Data.DbType"/>。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.DataType.SystemType">
            <summary>
            获取数据类型对应的 <see cref="T:System.Type"/>。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.ForeignKey">
            <summary>
            数据库外键信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ForeignKey.Catalog">
            <summary>
            获取约束分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ForeignKey.Schema">
            <summary>
            获取约束架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ForeignKey.TableName">
            <summary>
            获取表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ForeignKey.ColumnName">
            <summary>
            获取字段名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ForeignKey.Name">
            <summary>
            获取约束名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ForeignKey.PKTable">
            <summary>
            获取父表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ForeignKey.PKColumn">
            <summary>
            获取主键名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.MsSqlSchema">
            <summary>
            MsSql相关数据库架构信息的获取方法。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.MySqlSchema">
            <summary>
            MySql相关数据库架构信息的获取方法。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.OracleSchema">
            <summary>
            Oracle相关数据库架构信息的获取方法。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.PostgreSqlSchema">
            <summary>
            PostgreSql相关数据库架构信息的获取方法。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.SQLiteSchema">
            <summary>
            SQLite相关数据库架构信息的获取方法。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.Index">
            <summary>
            索引的信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Index.Catalog">
            <summary>
            获取索引分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Index.Schema">
            <summary>
            获取索引架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Index.TableName">
            <summary>
            获取表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Index.Name">
            <summary>
            获取索引名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Index.IsUnique">
            <summary>
            获取是否唯一。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Index.IsPrimaryKey">
            <summary>
            获取是否主键。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.IndexColumn">
            <summary>
            索引列的信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.IndexColumn.Catalog">
            <summary>
            获取约束分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.IndexColumn.Schema">
            <summary>
            获取约束架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.IndexColumn.Name">
            <summary>
            获取约束名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.IndexColumn.TableName">
            <summary>
            获取表的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.IndexColumn.IndexName">
            <summary>
            获取索引的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.IndexColumn.ColumnName">
            <summary>
            获取列的名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.ISchemaMetadata">
            <summary>
            数据库架构元数据结构。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.ISchemaProvider">
            <summary>
            提供获取数据库架构的方法。
            </summary>
        </member>
        <!-- 对于成员“M:Fireasy.Data.Schema.ISchemaProvider.GetSchemas``1(Fireasy.Data.IDatabase,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})”忽略有格式错误的 XML 注释 -->
        <member name="T:Fireasy.Data.Schema.Linq.SchemaQueryTranslateException">
            <summary>
            使用非法的限制查询表达式时抛出的异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Schema.Linq.SchemaQueryTranslateException.#ctor(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
            <summary>
            实例化类 <see cref="T:Fireasy.Data.Schema.Linq.SchemaQueryTranslateException"/> 的新实例，表示指定的 <see cref="T:System.Reflection.MemberInfo"/> 不支持限制查询。
            </summary>
            <param name="currMember">当前使用的 <see cref="T:System.Reflection.MemberInfo"/> 对象。</param>
            <param name="mbrRestrs">提供限制查询的 <see cref="T:System.Reflection.MemberInfo"/> 列表。</param>
        </member>
        <member name="M:Fireasy.Data.Schema.Linq.SchemaQueryTranslateException.#ctor(System.Type)">
            <summary>
            实例化类 <see cref="T:Fireasy.Data.Schema.Linq.SchemaQueryTranslateException"/> 的新实例，表示此元数据不支持限制查询。
            </summary>
            <param name="metadataType"></param>
        </member>
        <member name="M:Fireasy.Data.Schema.Linq.SchemaQueryTranslator.GetRestrictions``1(System.Linq.Expressions.Expression,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Reflection.MemberInfo}})">
            <summary>
            对表达式进行解析，并返回限制值字典。
            </summary>
            <param name="expression">查询表达式。</param>
            <param name="dicRestrMbrs"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.Linq.SchemaQueryTranslator.Visit(System.Linq.Expressions.Expression)">
            <summary>
            访问表达式树。
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.Linq.SchemaQueryTranslator.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            访问二元运算表达式。
            </summary>
            <param name="binaryExp"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Schema.MetadataCollection">
            <summary>
            元数据集合信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.MetadataCollection.CollectionName">
            <summary>
            获取集合名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.MetadataCollection.NumberOfRestrictions">
            <summary>
            获取集合指定的限制数。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.MetadataCollection.NumberOfIdentifierParts">
            <summary>
            获取集合复合标识符的个数。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.Procedure">
            <summary>
            数据库存储过程信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Procedure.Catalog">
            <summary>
            获取分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Procedure.Schema">
            <summary>
            获取架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Procedure.Name">
            <summary>
            获取存储过程名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Procedure.Type">
            <summary>
            获取存储过程类型。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.ProcedureParameter">
            <summary>
            数据库存储过程参数信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.Catalog">
            <summary>
            获取分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.Schema">
            <summary>
            获取架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.ProcedureName">
            <summary>
            获取存储过程名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.Name">
            <summary>
            获取参数名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.Direction">
            <summary>
            获取参数类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.DataType">
            <summary>
            获取参数的数据类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.NumericPrecision">
            <summary>
            获取参数的小数精度。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.NumericScale">
            <summary>
            获取参数的小数范围。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ProcedureParameter.Length">
            <summary>
            获取参数的长度。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.ReservedWord">
            <summary>
            数据库保留字信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ReservedWord.Word">
            <summary>
            获取保留字名称。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.Restriction">
            <summary>
            集合的限制信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Restriction.CollectionName">
            <summary>
            获取限制的集合名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Restriction.Name">
            <summary>
            获取限制的名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Restriction.Number">
            <summary>
            获取在限制集合中的实际位置。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.RestrictionDictionary">
            <summary>
            用于存储限制值的字典。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Schema.RestrictionDictionary.Parameterize(Fireasy.Data.ParameterCollection,System.String,System.String)">
            <summary>
            使用限制值参数化 <see cref="T:Fireasy.Data.ParameterCollection"/> 对象。
            </summary>
            <param name="parameters"><see cref="T:Fireasy.Data.ParameterCollection"/> 对象。</param>
            <param name="parameterName">参数名称。</param>
            <param name="propertyName">限制值的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.RestrictionDictionary.TryGetValue(System.String,System.String@)">
            <summary>
            尝试从字典里拿到不为 null 的字符串值。
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Schema.SchemaBase">
            <summary>
            一个抽象类，提供获取数据库架构的方法。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetSchemas``1(Fireasy.Data.IDatabase,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取指定类型的数据库架构信息。
            </summary>
            <typeparam name="T">架构信息的类型。</typeparam>
            <param name="database">提供给当前插件的 <see cref="T:Fireasy.Data.IDatabase"/> 对象。</param>
            <param name="predicate">用于测试架构信息是否满足条件的函数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.AddRestriction``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            为 <typeparamref name="T"/> 类型添加约定限定。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="restrs"></param>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.AddDataType(System.String,System.Data.DbType,System.Type)">
            <summary>
            添加数据类型。
            </summary>
            <param name="name">类型名称。</param>
            <param name="dbType"></param>
            <param name="systemType"></param>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetColumns(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.Column"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetProcedures(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.Procedure"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetProcedureParameters(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.ProcedureParameter"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetTables(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.Table"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetUsers(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.User"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetViews(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.View"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetViewColumns(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.ViewColumn"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetDatabases(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.Database"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetReservedWords(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.ReservedWord"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetRestrictions(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.Restriction"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetForeignKeys(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.ForeignKey"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetDataTypes(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.DataType"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetIndexs(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.Index"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetIndexColumns(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.IndexColumn"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaBase.GetMetadataCollections(Fireasy.Data.IDatabase,Fireasy.Data.Schema.RestrictionDictionary)">
            <summary>
            获取 <see cref="T:Fireasy.Data.Schema.MetadataCollection"/> 元数据序列。
            </summary>
            <param name="table">架构信息的表。</param>
            <param name="action">用于填充元数据的方法。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Schema.SchemaException">
            <summary>
            无法正常获取架构信息时抛出的异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaException.#ctor(System.String,System.Exception)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Schema.SchemaException"/> 类的新实例。
            </summary>
            <param name="collectionName">架构类别的名称。</param>
            <param name="innerExp">内部异常。</param>
        </member>
        <member name="T:Fireasy.Data.Schema.SchemaNotSupportedtException">
            <summary>
            表示不支持对某类架构信息进行查询的异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaNotSupportedtException.#ctor(System.String,System.Exception)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Schema.SchemaNotSupportedtException"/> 类的新实例。
            </summary>
            <param name="collectionName">架构类别的名称。</param>
            <param name="innerExp">内部异常。</param>
        </member>
        <member name="T:Fireasy.Data.Schema.SchemaQueryableAttribute">
            <summary>
            指示属性在架构限制数组查询中的索引。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaQueryableAttribute.#ctor(System.Int32,System.String)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Schema.SchemaQueryableAttribute"/> 类的新实例。
            </summary>
            <param name="index">索引值。</param>
            <param name="providerType">所支持的数据库提供者类型。</param>
        </member>
        <member name="P:Fireasy.Data.Schema.SchemaQueryableAttribute.ProviderType">
            <summary>
            获取或设置数据提供者类别。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.SchemaQueryableAttribute.Index">
            <summary>
            获取或设置索引值。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.SchemaQueryNotSupportedException">
            <summary>
            表示不支持架构查询定义的异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Schema.SchemaQueryNotSupportedException.#ctor(System.String)">
            <summary>
            初始化 <see cref="T:Fireasy.Data.Schema.SchemaQueryNotSupportedException"/> 类的新实例。
            </summary>
            <param name="metadataName">元数据名称。</param>
        </member>
        <member name="T:Fireasy.Data.Schema.Table">
            <summary>
            数据库表信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Table.Catalog">
            <summary>
            获取分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Table.Schema">
            <summary>
            获取架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Table.Name">
            <summary>
            获取表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Table.Type">
            <summary>
            获取表类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Table.Description">
            <summary>
            获取表的描述。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.Trigger">
            <summary>
            触发器信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Trigger.Catalog">
            <summary>
            获取分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Trigger.Schema">
            <summary>
            获取架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Trigger.Name">
            <summary>
            获取表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Trigger.ObjectTable">
            <summary>
            获取目标表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Trigger.Manipulation">
            <summary>
            获取事件处理。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.Trigger.Timing">
            <summary>
            获取动作时间。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.User">
            <summary>
            数据库用户信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.User.Name">
            <summary>
            获取用户名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.User.CreateDate">
            <summary>
            获取或设置创建时间。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.View">
            <summary>
            数据库视图信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.View.Catalog">
            <summary>
            获取分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.View.Schema">
            <summary>
            获取架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.View.Name">
            <summary>
            获取表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.View.Description">
            <summary>
            获取表的描述。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Schema.ViewColumn">
            <summary>
            视图的列信息。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Catalog">
            <summary>
            获取表分录名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Schema">
            <summary>
            获取表架构名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.ViewName">
            <summary>
            获取表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Name">
            <summary>
            获取列名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Description">
            <summary>
            获取列描述。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.DataType">
            <summary>
            获取数据类型。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Default">
            <summary>
            获取默认值。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.NumericPrecision">
            <summary>
            获取小数精度。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.NumericScale">
            <summary>
            获取小数范围。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Size">
            <summary>
            获取列长度。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.IsNullable">
            <summary>
            获取是否可为空。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.IsPrimaryKey">
            <summary>
            获取是否为主键值。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Autoincrement">
            <summary>
            获取是否为自增长型列。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Schema.ViewColumn.Position">
            <summary>
            获取列的位置。
            </summary>
        </member>
        <member name="T:Fireasy.Data.SegmentNotSupportedException">
            <summary>
            当数据库不支持分段查询数据时，抛出该异常。无法继承此类。
            </summary>
        </member>
        <member name="T:Fireasy.Data.SingleValueRowMapper`1">
            <summary>
            一个将数据行转换为单一数值或字符串类型的映射器。
            </summary>
            <typeparam name="T">要转换的类型。该类型一定是实现了 <see cref="T:System.IConvertible"/> 或 <see cref="T:Fireasy.Data.Converter.IValueConverter"/> 接口。</typeparam>
        </member>
        <member name="M:Fireasy.Data.SingleValueRowMapper`1.Map(System.Data.IDataReader)">
            <summary>
            将一个 <see cref="T:System.Data.IDataReader"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="reader">一个 <see cref="T:System.Data.IDataReader"/> 对象。</param>
            <returns>由当前 <see cref="T:System.Data.IDataReader"/> 对象中的数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="M:Fireasy.Data.SingleValueRowMapper`1.Map(System.Data.DataRow)">
            <summary>
            将一个 <see cref="T:System.Data.DataRow"/> 转换为一个 <typeparamref name="T"/> 的对象。
            </summary>
            <param name="row">一个 <see cref="T:System.Data.DataRow"/> 对象。</param>
            <returns>由 <see cref="T:System.Data.DataRow"/> 中数据转换成的 <typeparamref name="T"/> 对象实例。</returns>
        </member>
        <member name="P:Fireasy.Data.SingleValueRowMapper`1.RecordWrapper">
            <summary>
            获取或设置 <see cref="T:Fireasy.Data.RecordWrapper.IRecordWrapper"/>。
            </summary>
        </member>
        <member name="P:Fireasy.Data.SingleValueRowMapper`1.Initializer">
            <summary>
            获取或设置对象的初始化器。
            </summary>
        </member>
        <member name="T:Fireasy.Data.SortOrder">
            <summary>
            排序顺序。
            </summary>
        </member>
        <member name="F:Fireasy.Data.SortOrder.None">
            <summary>
            未定义。
            </summary>
        </member>
        <member name="F:Fireasy.Data.SortOrder.Ascending">
            <summary>
            升序。
            </summary>
        </member>
        <member name="F:Fireasy.Data.SortOrder.Descending">
            <summary>
            降序。
            </summary>
        </member>
        <member name="T:Fireasy.Data.SortDefinition">
            <summary>
            定义数据排序。
            </summary>
        </member>
        <member name="P:Fireasy.Data.SortDefinition.Order">
            <summary>
            获取或设置排序顺序。
            </summary>
        </member>
        <member name="P:Fireasy.Data.SortDefinition.Member">
            <summary>
            获取或设置排序的成员名称。
            </summary>
        </member>
        <member name="M:Fireasy.Data.SortDefinition.Replace(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            使用一组值替换 Member 属性。
            </summary>
            <param name="members">一个字典，Key 与 Member 属性相匹配，使用 Value 做替换。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.SortDefinition.Replace(System.String[])">
            <summary>
            使用一组值替换 Member 属性。
            </summary>
            <param name="members">一组偶数个数的字符串，下标为偶数(包括0)的字符串与 Member 作匹配，使用其后一个字符串进行替换。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.SqlCommand">
            <summary>
            表示使用SQL的查询命令。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.SqlCommand.op_Implicit(System.String)~Fireasy.Data.SqlCommand">
            <summary>
            将字符串转换为 <see cref="T:Fireasy.Data.SqlCommand"/> 实例。
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.SqlCommand.op_Explicit(Fireasy.Data.SqlCommand)~System.String">
            <summary>
            将 <see cref="T:Fireasy.Data.SqlCommand"/> 转换为字符串。
            </summary>
            <param name="sqlCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.SqlCommand.op_Addition(Fireasy.Data.SqlCommand,Fireasy.Data.SqlCommand)">
            <summary>
            将两个 <see cref="T:Fireasy.Data.SqlCommand"/> 进行连接。
            </summary>
            <param name="command0"></param>
            <param name="command1"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.SqlCommand.#ctor(System.String)">
            <summary>
            使用SQL语句初始化 <see cref="T:Fireasy.Data.SqlCommand"/> 类的新实例。
            </summary>
            <param name="sql">查询语句。</param>
        </member>
        <member name="M:Fireasy.Data.SqlCommand.ToString">
            <summary>
            输出字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.DateTimeSyntax">
            <summary>
            基本的日期函数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.SystemTime">
            <summary>
            获取系统日期。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.New(System.Object,System.Object,System.Object)">
            <summary>
            初始化日期。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.New(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            初始化日期时间。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <param name="hourExp">时表达式。</param>
            <param name="minuteExp">分表达式。</param>
            <param name="secondExp">秒表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.ShortTime(System.Object)">
            <summary>
            获取源表达式中的短时间部份。
            </summary>
            <param name="sourceExp"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.ShortDate(System.Object)">
            <summary>
            获取源表达式中的短日期部份。
            </summary>
            <param name="sourceExp"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.DayOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.WeekOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几周。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.AddHours(System.Object,System.Object)">
            <summary>
            源表达式增加小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="hourExp">小时，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.AddMinutes(System.Object,System.Object)">
            <summary>
            源表达式增加分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="minuteExp">分，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.AddSeconds(System.Object,System.Object)">
            <summary>
            源表达式增加秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="secondExp">秒，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.DiffDays(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.DiffHours(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的小时数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.DiffMinutes(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的分钟数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.DateTimeSyntax.DiffSeconds(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的秒数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.ExceptionHelper">
            <summary>
            异常辅助类。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Syntax.IDateTimeSyntax">
            <summary>
            日期函数解析接口。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.SystemTime">
            <summary>
            获取系统日期。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.ToString(System.Object)">
            <summary>
            将日期表达式转换为字符串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.DayOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.WeekOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几周。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.DiffDays(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.DiffHours(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的小时数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.DiffMinutes(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的分钟数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IDateTimeSyntax.DiffSeconds(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的秒数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.IMathSyntax">
            <summary>
            数学函数解析接口。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.And(System.Object,System.Object)">
            <summary>
            两个表达式进行与运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Or(System.Object,System.Object)">
            <summary>
            两个表达式进行或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Modulo(System.Object,System.Object)">
            <summary>
            对源表达式进行求余运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.ExclusiveOr(System.Object,System.Object)">
            <summary>
            对两个表达式进行异或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Ceiling(System.Object)">
            <summary>
            返回源表达式的最小整数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Round(System.Object,System.Object)">
            <summary>
            将源表达式的小数位舍入。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="digitExp">小数位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Floor(System.Object)">
            <summary>
            返回源表达式的最大整数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Log(System.Object)">
            <summary>
            返回以e为底的对数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Log10(System.Object)">
            <summary>
            返回以10为底的对数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Exp(System.Object)">
            <summary>
            返回e的指定次冪。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Abs(System.Object)">
            <summary>
            返回源表达式的绝对值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Negate(System.Object)">
            <summary>
            返回源表达式的反值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Power(System.Object,System.Object)">
            <summary>
            返回源表达式的指定冪。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="powerExp">冪。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Sqrt(System.Object)">
            <summary>
            返回源表达式的二次开方值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Sin(System.Object)">
            <summary>
            返回源表达式的正弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Cos(System.Object)">
            <summary>
            返回源表达式的余弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Tan(System.Object)">
            <summary>
            返回源表达式的正切值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Asin(System.Object)">
            <summary>
            返回源表达式的反正弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Acos(System.Object)">
            <summary>
            返回源表达式的反余弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Atan(System.Object)">
            <summary>
            返回源表达式的反正切值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.Sign(System.Object)">
            <summary>
            返回源表达式的符号。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.LeftShift(System.Object,System.Object)">
            <summary>
            返回源表达式左移后的值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="shiftExp">位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IMathSyntax.RightShift(System.Object,System.Object)">
            <summary>
            返回源表达式右移后的值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="shiftExp">位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.New(System.Object,System.Object,System.Object)">
            <summary>
            初始化日期。
            </summary>
            <param name="yearExp"></param>
            <param name="monthExp"></param>
            <param name="dayExp"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.New(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            初始化日期时间。
            </summary>
            <param name="yearExp"></param>
            <param name="monthExp"></param>
            <param name="dayExp"></param>
            <param name="hourExp"></param>
            <param name="minuteExp"></param>
            <param name="secondExp"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.DayOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.AddHours(System.Object,System.Object)">
            <summary>
            源表达式增加小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="hourExp">小时，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.AddMinutes(System.Object,System.Object)">
            <summary>
            源表达式增加分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="minuteExp">分，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessDateTimeSyntax.AddSeconds(System.Object,System.Object)">
            <summary>
            源表达式增加秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="secondExp">秒，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Atan(System.Object)">
            <summary>
            返回源表达式的反正切值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Floor(System.Object)">
            <summary>
            返回源表达式的最大整数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Power(System.Object,System.Object)">
            <summary>
            返回源表达式的指定冪。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="powerExp">冪。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Sqrt(System.Object)">
            <summary>
            返回源表达式的二次开方值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Modulo(System.Object,System.Object)">
            <summary>
            对源表达式进行求余运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.LeftShift(System.Object,System.Object)">
            <summary>
            返回源表达式左移后的值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="shiftExp">位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.RightShift(System.Object,System.Object)">
            <summary>
            返回源表达式右移后的值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="shiftExp">位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.And(System.Object,System.Object)">
            <summary>
            两个表达式进行与运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Or(System.Object,System.Object)">
            <summary>
            两个表达式进行或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.ExclusiveOr(System.Object,System.Object)">
            <summary>
            对两个表达式进行异或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Not(System.Object)">
            <summary>
            返回源表达式的非值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessMathSyntax.Random">
            <summary>
            返回随机数生成函数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessStringSyntax.Length(System.Object)">
            <summary>
            计算源表达式的长度。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessStringSyntax.Substring(System.Object,System.Object,System.Object)">
            <summary>
            取源表达式的子串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">子串的起始字符位置。</param>
            <param name="lenExp">子串中的字符数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessStringSyntax.IndexOf(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            判断子串在源表达式中的位置。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="startExp">搜索起始位置。</param>
            <param name="countExp">要检查的字符位置数</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessStringSyntax.ToLower(System.Object)">
            <summary>
            将源表达式转换为小写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessStringSyntax.ToUpper(System.Object)">
            <summary>
            将源表达式转换为大写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessStringSyntax.Concat(System.Object[])">
            <summary>
            将一组字符串连接为新的字符串。
            </summary>
            <param name="strExps">要连接的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.String">
            <summary>
            获取字符串函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.DateTime">
            <summary>
            获取日期函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.Math">
            <summary>
            获取数学函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.IdentitySelect">
            <summary>
            获取最近创建的自动编号的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.IdentityColumn">
            <summary>
            获取自增长列的关键词。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.RowsAffected">
            <summary>
            获取受影响的行数的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.FakeSelect">
            <summary>
            获取伪查询的表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.ParameterPrefix">
            <summary>
            获取存储参数的前缀。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.Quote">
            <summary>
            获取列引号标识符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.Linefeed">
            <summary>
            获取换行符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.SupportDistinctInAggregates">
            <summary>
            获取是否允许在聚合中使用 DISTINCT 关键字。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.AccessSyntax.SupportSubqueryInSelectWithoutFrom">
            <summary>
            获取是否允许在没有 FORM 的语句中使用子查询。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.Segment(Fireasy.Data.CommandContext)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="context">命令上下文对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.Segment(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="commandText">命令文本。</param>
            <param name="segment">数据分段对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.Convert(System.Object,System.Data.DbType)">
            <summary>
            转换源表达式的数据类型。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="dbType">要转换的类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.Column(System.Data.DbType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根据数据类型生成相应的列。
            </summary>
            <param name="dbType">数据类型。</param>
            <param name="length">数据长度。</param>
            <param name="precision">数值的精度。</param>
            <param name="scale">数值的小数位。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.Coalesce(System.Object,System.Object[])">
            <summary>
            如果源表达式为 null，则依次判断给定的一组参数，直至某参数非 null 时返回。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="argExps">参与判断的一组参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.FormatParameter(System.String)">
            <summary>
            格式化参数名称。
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.ExistsTable(System.String)">
            <summary>
            获取判断表是否存在的语句。
            </summary>
            <param name="tableName">要判断的表的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.AccessSyntax.CorrectDbType(System.Data.DbType)">
            <summary>
            修正 <see cref="T:System.Data.DbType"/> 值。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.FirebirdDateTimeSyntax">
            <summary>
            Firebird日期函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.DayOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.WeekOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几周。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.AddHours(System.Object,System.Object)">
            <summary>
            源表达式增加小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="hourExp">小时，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.AddMinutes(System.Object,System.Object)">
            <summary>
            源表达式增加分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="minuteExp">分，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.AddSeconds(System.Object,System.Object)">
            <summary>
            源表达式增加秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="secondExp">秒，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.DiffDays(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.DiffHours(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的小时数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.DiffMinutes(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的分钟数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdDateTimeSyntax.DiffSeconds(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的秒数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.FirebirdMathSyntax">
            <summary>
            Firebird数学函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdMathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.FirebirdStringSyntax">
            <summary>
            Firebird字符串函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdStringSyntax.Substring(System.Object,System.Object,System.Object)">
            <summary>
            取源表达式的子串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">子串的起始字符位置。</param>
            <param name="lenExp">子串中的字符数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdStringSyntax.Length(System.Object)">
            <summary>
            计算源表达式的长度。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdStringSyntax.IndexOf(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            判断子串在源表达式中的位置。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="startExp">搜索起始位置。</param>
            <param name="countExp">要检查的字符位置数</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.FirebirdStringSyntax.Concat(System.Object[])">
            <summary>
            将一组字符串连接为新的字符串。
            </summary>
            <param name="strExps">要连接的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MsSqlDateTimeSyntax">
            <summary>
            MsSql日期函数语法解析。
            </summary>
        </member>
        <member name="T:Fireasy.Data.Syntax.MsSqlMathSyntax">
            <summary>
            MsSql数学函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlMathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MsSqlStringSyntax">
            <summary>
            MsSql字符串函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlStringSyntax.Length(System.Object)">
            <summary>
            计算源表达式的长度。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MsSqlSyntax">
            <summary>
            MsSql函数语法解析。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.String">
            <summary>
            获取字符串函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.DateTime">
            <summary>
            获取日期函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.Math">
            <summary>
            获取数学函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.IdentitySelect">
            <summary>
            获取最近创建的自动编号的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.IdentityColumn">
            <summary>
            获取自增长列的关键词。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.RowsAffected">
            <summary>
            获取受影响的行数的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.FakeSelect">
            <summary>
            获取伪查询的表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.ParameterPrefix">
            <summary>
            获取存储参数的前缀。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.Quote">
            <summary>
            获取列引号标识符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.Linefeed">
            <summary>
            获取换行符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.SupportDistinctInAggregates">
            <summary>
            获取是否允许在聚合中使用 DISTINCT 关键字。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MsSqlSyntax.SupportSubqueryInSelectWithoutFrom">
            <summary>
            获取是否允许在没有 FORM 的语句中使用子查询。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.Segment(Fireasy.Data.CommandContext)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="context">命令上下文对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.SegmentWith2012(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            2012以上版本支持的新分页语法。
            </summary>
            <param name="commandText"></param>
            <param name="segment"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.Segment(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="commandText">命令文本。</param>
            <param name="segment">数据分段对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.Convert(System.Object,System.Data.DbType)">
            <summary>
            转换源表达式的数据类型。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="dbType">要转换的类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.Column(System.Data.DbType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根据数据类型生成相应的列。
            </summary>
            <param name="dbType">数据类型。</param>
            <param name="length">数据长度。</param>
            <param name="precision">数值的精度。</param>
            <param name="scale">数值的小数位。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.Coalesce(System.Object,System.Object[])">
            <summary>
            如果源表达式为 null，则依次判断给定的一组参数，直至某参数非 null 时返回。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="argExps">参与判断的一组参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.FormatParameter(System.String)">
            <summary>
            格式化参数名称。
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.ExistsTable(System.String)">
            <summary>
            获取判断表是否存在的语句。
            </summary>
            <param name="tableName">要判断的表的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.CorrectDbType(System.Data.DbType)">
            <summary>
            修正 <see cref="T:System.Data.DbType"/> 值。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MsSqlSyntax.GetServerVersion(Fireasy.Data.IDatabase)">
            <summary>
            获取数据库版本。
            </summary>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MySqlDateTimeSyntax">
            <summary>
            MySql日期函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.SystemTime">
            <summary>
            获取系统日期。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.New(System.Object,System.Object,System.Object)">
            <summary>
            初始化日期。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.New(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            初始化日期时间。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <param name="hourExp">时表达式。</param>
            <param name="minuteExp">分表达式。</param>
            <param name="secondExp">秒表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.DayOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.WeekOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几周。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.AddHours(System.Object,System.Object)">
            <summary>
            源表达式增加小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="hourExp">小时，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.AddMinutes(System.Object,System.Object)">
            <summary>
            源表达式增加分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="minuteExp">分，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.AddSeconds(System.Object,System.Object)">
            <summary>
            源表达式增加秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="secondExp">秒，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.DiffDays(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.DiffHours(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的小时数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.DiffMinutes(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的分钟数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlDateTimeSyntax.DiffSeconds(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的秒数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MySqlMathSyntax">
            <summary>
            MySql数学函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlMathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MySqlStringSyntax">
            <summary>
            MySql字符串函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlStringSyntax.Substring(System.Object,System.Object,System.Object)">
            <summary>
            取源表达式的子串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">子串的起始字符位置。</param>
            <param name="lenExp">子串中的字符数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlStringSyntax.IndexOf(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            判断子串在源表达式中的位置。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="startExp">搜索起始位置。</param>
            <param name="countExp">要检查的字符位置数</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlStringSyntax.ToLower(System.Object)">
            <summary>
            将源表达式转换为小写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlStringSyntax.ToUpper(System.Object)">
            <summary>
            将源表达式转换为大写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlStringSyntax.Trim(System.Object)">
            <summary>
            截掉源表达式的两边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlStringSyntax.Concat(System.Object[])">
            <summary>
            将一组字符串连接为新的字符串。
            </summary>
            <param name="strExps">要连接的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlStringSyntax.IsMatch(System.Object,System.Object)">
            <summary>
            正则表达式匹配。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="regexExp">正则表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MySqlSyntax">
            <summary>
            MySql函数语法解析。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.String">
            <summary>
            获取字符串函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.DateTime">
            <summary>
            获取日期函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.Math">
            <summary>
            获取数学函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.IdentitySelect">
            <summary>
            获取最近创建的自动编号的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.IdentityColumn">
            <summary>
            获取自增长列的关键词。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.RowsAffected">
            <summary>
            获取受影响的行数的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.FakeSelect">
            <summary>
            获取伪查询的表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.ParameterPrefix">
            <summary>
            获取存储参数的前缀。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.Quote">
            <summary>
            获取列引号标识符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.Linefeed">
            <summary>
            获取换行符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.SupportDistinctInAggregates">
            <summary>
            获取是否允许在聚合中使用 DISTINCT 关键字。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.MySqlSyntax.SupportSubqueryInSelectWithoutFrom">
            <summary>
            获取是否允许在没有 FORM 的语句中使用子查询。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.Segment(Fireasy.Data.CommandContext)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="context">命令上下文对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.Segment(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="commandText">命令文本。</param>
            <param name="segment">数据分段对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.Convert(System.Object,System.Data.DbType)">
            <summary>
            转换源表达式的数据类型。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="dbType">要转换的类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.Column(System.Data.DbType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根据数据类型生成相应的列。
            </summary>
            <param name="dbType">数据类型。</param>
            <param name="length">数据长度。</param>
            <param name="precision">数值的精度。</param>
            <param name="scale">数值的小数位。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.Coalesce(System.Object,System.Object[])">
            <summary>
            如果源表达式为 null，则依次判断给定的一组参数，直至某参数非 null 时返回。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="argExps">参与判断的一组参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.FormatParameter(System.String)">
            <summary>
            格式化参数名称。
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.ExistsTable(System.String)">
            <summary>
            获取判断表是否存在的语句。
            </summary>
            <param name="tableName">要判断的表的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MySqlSyntax.CorrectDbType(System.Data.DbType)">
            <summary>
            修正 <see cref="T:System.Data.DbType"/> 值。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.OracleDateTimeSyntax">
            <summary>
            Oracle日期函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.SystemTime">
            <summary>
            获取系统日期。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.New(System.Object,System.Object,System.Object)">
            <summary>
            初始化日期。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.New(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            初始化日期时间。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <param name="hourExp">时表达式。</param>
            <param name="minuteExp">分表达式。</param>
            <param name="secondExp">秒表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.ShortTime(System.Object)">
            <summary>
            获取源表达式中的短时间部份。
            </summary>
            <param name="sourceExp"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.ShortDate(System.Object)">
            <summary>
            获取源表达式中的短日期部份。
            </summary>
            <param name="sourceExp"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.DayOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.WeekOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几周。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.AddHours(System.Object,System.Object)">
            <summary>
            源表达式增加小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="hourExp">小时，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.AddMinutes(System.Object,System.Object)">
            <summary>
            源表达式增加分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="minuteExp">分，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.AddSeconds(System.Object,System.Object)">
            <summary>
            源表达式增加秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="secondExp">秒，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.DiffDays(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.DiffHours(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的小时数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.DiffMinutes(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的分钟数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleDateTimeSyntax.DiffSeconds(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的秒数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.OracleMathSyntax">
            <summary>
            Oracle数学函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.And(System.Object,System.Object)">
            <summary>
            两个表达式进行与运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Or(System.Object,System.Object)">
            <summary>
            两个表达式进行或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Not(System.Object)">
            <summary>
            返回源表达式的非值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Modulo(System.Object,System.Object)">
            <summary>
            对源表达式进行求余运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.ExclusiveOr(System.Object,System.Object)">
            <summary>
            对两个表达式进行异或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Ceiling(System.Object)">
            <summary>
            返回源表达式的最小整数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Log(System.Object)">
            <summary>
            返回以e为底的对数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Log10(System.Object)">
            <summary>
            返回以10为底的对数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Negate(System.Object)">
            <summary>
            返回源表达式的反值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Exp(System.Object)">
            <summary>
            返回e的指定次冪。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Random">
            <summary>
            返回随机数生成函数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Sin(System.Object)">
            <summary>
            返回源表达式的正弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Cos(System.Object)">
            <summary>
            返回源表达式的余弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Tan(System.Object)">
            <summary>
            返回源表达式的正切值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Asin(System.Object)">
            <summary>
            返回源表达式的反正弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Acos(System.Object)">
            <summary>
            返回源表达式的反余弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Atan(System.Object)">
            <summary>
            返回源表达式的反正切值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleMathSyntax.Sign(System.Object)">
            <summary>
            返回源表达式的符号。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.OracleStringSyntax">
            <summary>
            Oracle字符串函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleStringSyntax.Substring(System.Object,System.Object,System.Object)">
            <summary>
            取源表达式的子串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">子串的起始字符位置。</param>
            <param name="lenExp">子串中的字符数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleStringSyntax.IndexOf(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            判断子串在源表达式中的位置。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="startExp">搜索起始位置。</param>
            <param name="countExp">要检查的字符位置数</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleStringSyntax.Trim(System.Object)">
            <summary>
            截掉源表达式的两边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleStringSyntax.Concat(System.Object[])">
            <summary>
            将一组字符串连接为新的字符串。
            </summary>
            <param name="strExps">要连接的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleStringSyntax.IsMatch(System.Object,System.Object)">
            <summary>
            正则表达式匹配。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="regexExp">正则表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.OracleSyntax">
            <summary>
            Oracle函数语法解析。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.String">
            <summary>
            获取字符串函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.DateTime">
            <summary>
            获取日期函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.Math">
            <summary>
            获取数学函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.IdentitySelect">
            <summary>
            获取最近创建的自动编号的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.IdentityColumn">
            <summary>
            获取自增长列的关键词。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.RowsAffected">
            <summary>
            获取受影响的行数的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.FakeSelect">
            <summary>
            获取伪查询的表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.ParameterPrefix">
            <summary>
            获取存储参数的前缀。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.Quote">
            <summary>
            获取列引号标识符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.Linefeed">
            <summary>
            获取换行符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.SupportDistinctInAggregates">
            <summary>
            获取是否允许在聚合中使用 DISTINCT 关键字。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.OracleSyntax.SupportSubqueryInSelectWithoutFrom">
            <summary>
            获取是否允许在没有 FORM 的语句中使用子查询。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.Segment(Fireasy.Data.CommandContext)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="context">命令上下文对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.Segment(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="commandText">命令文本。</param>
            <param name="segment">数据分段对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.Convert(System.Object,System.Data.DbType)">
            <summary>
            转换源表达式的数据类型。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="dbType">要转换的类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.Column(System.Data.DbType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根据数据类型生成相应的列。
            </summary>
            <param name="dbType">数据类型。</param>
            <param name="length">数据长度。</param>
            <param name="precision">数值的精度。</param>
            <param name="scale">数值的小数位。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.Coalesce(System.Object,System.Object[])">
            <summary>
            如果源表达式为 null，则依次判断给定的一组参数，直至某参数非 null 时返回。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="argExps">参与判断的一组参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.FormatParameter(System.String)">
            <summary>
            格式化参数名称。
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.ExistsTable(System.String)">
            <summary>
            获取判断表是否存在的语句。
            </summary>
            <param name="tableName">要判断的表的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.OracleSyntax.CorrectDbType(System.Data.DbType)">
            <summary>
            修正 <see cref="T:System.Data.DbType"/> 值。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.SystemTime">
            <summary>
            获取系统日期。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.New(System.Object,System.Object,System.Object)">
            <summary>
            初始化日期。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.New(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            初始化日期时间。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <param name="hourExp">时表达式。</param>
            <param name="minuteExp">分表达式。</param>
            <param name="secondExp">秒表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.WeekOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几周。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.AddHours(System.Object,System.Object)">
            <summary>
            源表达式增加小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="hourExp">小时，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.AddMinutes(System.Object,System.Object)">
            <summary>
            源表达式增加分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="minuteExp">分，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlDateTimeSyntax.AddSeconds(System.Object,System.Object)">
            <summary>
            源表达式增加秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="secondExp">秒，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.PostgreSqlSyntax">
            <summary>
            PostgreSql函数语法解析。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.String">
            <summary>
            获取字符串函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.DateTime">
            <summary>
            获取日期函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.Math">
            <summary>
            获取数学函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.IdentitySelect">
            <summary>
            获取最近创建的自动编号的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.IdentityColumn">
            <summary>
            获取自增长列的关键词。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.RowsAffected">
            <summary>
            获取受影响的行数的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.FakeSelect">
            <summary>
            获取伪查询的表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.ParameterPrefix">
            <summary>
            获取存储参数的前缀。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.Quote">
            <summary>
            获取列引号标识符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.Linefeed">
            <summary>
            获取换行符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.SupportDistinctInAggregates">
            <summary>
            获取是否允许在聚合中使用 DISTINCT 关键字。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.PostgreSqlSyntax.SupportSubqueryInSelectWithoutFrom">
            <summary>
            获取是否允许在没有 FORM 的语句中使用子查询。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.Segment(Fireasy.Data.CommandContext)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="context">命令上下文对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.Segment(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="commandText">命令文本。</param>
            <param name="segment">数据分段对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.Convert(System.Object,System.Data.DbType)">
            <summary>
            转换源表达式的数据类型。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="dbType">要转换的类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.Column(System.Data.DbType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根据数据类型生成相应的列。
            </summary>
            <param name="dbType">数据类型。</param>
            <param name="length">数据长度。</param>
            <param name="precision">数值的精度。</param>
            <param name="scale">数值的小数位。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.Coalesce(System.Object,System.Object[])">
            <summary>
            如果源表达式为 null，则依次判断给定的一组参数，直至某参数非 null 时返回。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="argExps">参与判断的一组参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.FormatParameter(System.String)">
            <summary>
            格式化参数名称。
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.ExistsTable(System.String)">
            <summary>
            获取判断表是否存在的语句。
            </summary>
            <param name="tableName">要判断的表的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.PostgreSqlSyntax.CorrectDbType(System.Data.DbType)">
            <summary>
            修正 <see cref="T:System.Data.DbType"/> 值。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.SQLiteDateTimeSyntax">
            <summary>
            SQLite日期函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.SystemTime">
            <summary>
            获取系统日期。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.New(System.Object,System.Object,System.Object)">
            <summary>
            初始化日期。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.New(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            初始化日期时间。
            </summary>
            <param name="yearExp">年表达式。</param>
            <param name="monthExp">月表达式。</param>
            <param name="dayExp">日表达式。</param>
            <param name="hourExp">时表达式。</param>
            <param name="minuteExp">分表达式。</param>
            <param name="secondExp">秒表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.Year(System.Object)">
            <summary>
            获取源表达式中的年份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.Month(System.Object)">
            <summary>
            获取源表达式中的月份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.Day(System.Object)">
            <summary>
            获取源表达式中的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.Hour(System.Object)">
            <summary>
            获取源表达式中的小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.Minute(System.Object)">
            <summary>
            获取源表达式中的分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.Second(System.Object)">
            <summary>
            获取源表达式中的秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.Millisecond(System.Object)">
            <summary>
            获取源表达式中的毫秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.DayOfWeek(System.Object)">
            <summary>
            获取源表达式中的本周的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.DayOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.WeekOfYear(System.Object)">
            <summary>
            获取源表达式中的本年的第几周。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.AddYears(System.Object,System.Object)">
            <summary>
            源表达式增加年。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="yearExp">年份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.AddMonths(System.Object,System.Object)">
            <summary>
            源表达式增加月。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="monthExp">月份数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.AddDays(System.Object,System.Object)">
            <summary>
            源表达式增加天。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="dayExp">天数，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.AddHours(System.Object,System.Object)">
            <summary>
            源表达式增加小时。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="hourExp">小时，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.AddMinutes(System.Object,System.Object)">
            <summary>
            源表达式增加分。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="minuteExp">分，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.AddSeconds(System.Object,System.Object)">
            <summary>
            源表达式增加秒。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="secondExp">秒，可为正可为负。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.DiffDays(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的天数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.DiffHours(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的小时数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.DiffMinutes(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的分钟数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteDateTimeSyntax.DiffSeconds(System.Object,System.Object)">
            <summary>
            计算两个表达式相差的秒数。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">结束日期。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.SQLiteFunctionBuilder">
            <summary>
            SQLite 自定义函数构造器。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteFunctionBuilder.Register(System.String,System.Int32,System.Action{Fireasy.Common.Emit.BuildContext})">
            <summary>
            注册一个新的自定义函数。
            </summary>
            <param name="functionName">函数的名称。</param>
            <param name="paramsCount">参数的个数。</param>
            <param name="actionIL">自定义函数的代码IL。</param>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteFunctionBuilder.RegisterRegexFunction">
            <summary>
            注册正则表达式匹配的函数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteFunctionBuilder.BuildFunctionType(System.String,System.Int32,System.Action{Fireasy.Common.Emit.BuildContext})">
            <summary>
            创建 SQLiteFunction 子类。
            </summary>
            <param name="functionName">函数的名称。</param>
            <param name="paramsCount">参数的个数。</param>
            <param name="actionIL">自定义函数的代码IL。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.SQLiteMathSyntax">
            <summary>
            SQLite数学函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteMathSyntax.ExclusiveOr(System.Object,System.Object)">
            <summary>
            对两个表达式进行异或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteMathSyntax.Random">
            <summary>
            返回随机数生成函数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteMathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.SQLiteStringSyntax">
            <summary>
            SQLite字符串函数语法解析。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteStringSyntax.Substring(System.Object,System.Object,System.Object)">
            <summary>
            取源表达式的子串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">子串的起始字符位置。</param>
            <param name="lenExp">子串中的字符数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteStringSyntax.Trim(System.Object)">
            <summary>
            截掉源表达式的两边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteStringSyntax.Concat(System.Object[])">
            <summary>
            将一组字符串连接为新的字符串。
            </summary>
            <param name="strExps">要连接的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteStringSyntax.IsMatch(System.Object,System.Object)">
            <summary>
            正则表达式匹配。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="regexExp">正则表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.SQLiteSyntax">
            <summary>
            SQLite函数语法解析。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.String">
            <summary>
            获取字符串函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.DateTime">
            <summary>
            获取日期函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.Math">
            <summary>
            获取数学函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.IdentitySelect">
            <summary>
            获取最近创建的自动编号的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.IdentityColumn">
            <summary>
            获取自增长列的关键词。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.RowsAffected">
            <summary>
            获取受影响的行数的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.FakeSelect">
            <summary>
            获取伪查询的表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.ParameterPrefix">
            <summary>
            获取存储参数的前缀。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.Quote">
            <summary>
            获取列引号标识符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.Linefeed">
            <summary>
            获取换行符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.SupportDistinctInAggregates">
            <summary>
            获取是否允许在聚合中使用 DISTINCT 关键字。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.SQLiteSyntax.SupportSubqueryInSelectWithoutFrom">
            <summary>
            获取是否允许在没有 FORM 的语句中使用子查询。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.Segment(Fireasy.Data.CommandContext)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="context">命令上下文对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.Segment(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="commandText">命令文本。</param>
            <param name="segment">数据分段对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.Convert(System.Object,System.Data.DbType)">
            <summary>
            转换源表达式的数据类型。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="dbType">要转换的类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.Column(System.Data.DbType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根据数据类型生成相应的列。
            </summary>
            <param name="dbType">数据类型。</param>
            <param name="length">数据长度。</param>
            <param name="precision">数值的精度。</param>
            <param name="scale">数值的小数位。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.Coalesce(System.Object,System.Object[])">
            <summary>
            如果源表达式为 null，则依次判断给定的一组参数，直至某参数非 null 时返回。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="argExps">参与判断的一组参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.FormatParameter(System.String)">
            <summary>
            格式化参数名称。
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.ExistsTable(System.String)">
            <summary>
            获取判断表是否存在的语句。
            </summary>
            <param name="tableName">要判断的表的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.SQLiteSyntax.CorrectDbType(System.Data.DbType)">
            <summary>
            修正 <see cref="T:System.Data.DbType"/> 值。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.IStringSyntax">
            <summary>
            字符串函数解析接口。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.Substring(System.Object,System.Object,System.Object)">
            <summary>
            取源表达式的子串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">子串的起始字符位置。</param>
            <param name="lenExp">子串中的字符数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.Length(System.Object)">
            <summary>
            计算源表达式的长度。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.IndexOf(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            判断子串在源表达式中的位置。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="startExp">搜索起始位置。</param>
            <param name="countExp">要检查的字符位置数</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.ToLower(System.Object)">
            <summary>
            将源表达式转换为小写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.ToUpper(System.Object)">
            <summary>
            将源表达式转换为大写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.TrimStart(System.Object)">
            <summary>
            截掉源表达式的左边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.TrimEnd(System.Object)">
            <summary>
            截掉源表达式的右边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.Trim(System.Object)">
            <summary>
            截掉源表达式的两边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.Replace(System.Object,System.Object,System.Object)">
            <summary>
            将源表达式中的部份字符替换为新的字符。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="replaceExp">要替换的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.Concat(System.Object[])">
            <summary>
            将一组字符串连接为新的字符串。
            </summary>
            <param name="strExps">要连接的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.Reverse(System.Object)">
            <summary>
            反转源表达式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.IStringSyntax.Remove(System.Object,System.Object,System.Object)">
            <summary>
            删除字符串表达式中的字符。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">起始字符位置。</param>
            <param name="lenExp">要删除的长度。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.ISyntaxProvider">
            <summary>
            数据库查询语言的语法解析接口。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.String">
            <summary>
            获取字符串函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.DateTime">
            <summary>
            获取日期函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.Math">
            <summary>
            获取数学函数相关的语法。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.IdentitySelect">
            <summary>
            获取最近创建的自动编号的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.IdentityColumn">
            <summary>
            获取自增长列的关键词。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.RowsAffected">
            <summary>
            获取受影响的行数的查询文本。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.FakeSelect">
            <summary>
            获取伪查询的表名称。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.ParameterPrefix">
            <summary>
            获取存储参数的前缀。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.Quote">
            <summary>
            获取列引号标识符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.Linefeed">
            <summary>
            获取换行符。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.SupportDistinctInAggregates">
            <summary>
            获取是否允许在聚合中使用 DISTINCT 关键字。
            </summary>
        </member>
        <member name="P:Fireasy.Data.Syntax.ISyntaxProvider.SupportSubqueryInSelectWithoutFrom">
            <summary>
            获取是否允许在没有 FORM 的语句中使用子查询。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.Segment(System.String,Fireasy.Data.IDataSegment)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="commandText">命令文本。</param>
            <param name="segment">数据分段对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.Segment(Fireasy.Data.CommandContext)">
            <summary>
            对命令文本进行分段处理，使之能够返回小范围内的数据。
            </summary>
            <param name="context">命令上下文对象。</param>
            <returns>处理后的分段命令文本。</returns>
            <exception cref="T:Fireasy.Data.SegmentNotSupportedException">当前数据库或版本不支持分段时，引发该异常。</exception>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.Convert(System.Object,System.Data.DbType)">
            <summary>
            转换源表达式的数据类型。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="dbType">要转换的类型。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.Column(System.Data.DbType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根据数据类型生成相应的列。
            </summary>
            <param name="dbType">数据类型。</param>
            <param name="length">数据长度。</param>
            <param name="precision">数值的精度。</param>
            <param name="scale">数值的小数位。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.Coalesce(System.Object,System.Object[])">
            <summary>
            如果源表达式为 null，则依次判断给定的一组参数，直至某参数非 null 时返回。
            </summary>
            <param name="sourceExp">要转换的源表达式。</param>
            <param name="argExps">参与判断的一组参数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.FormatParameter(System.String)">
            <summary>
            格式化参数名称。
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.ExistsTable(System.String)">
            <summary>
            获取判断表是否存在的语句。
            </summary>
            <param name="tableName">要判断的表的名称。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.ISyntaxProvider.CorrectDbType(System.Data.DbType)">
            <summary>
            修正 <see cref="T:System.Data.DbType"/> 值。
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.MathSyntax">
            <summary>
            基本的数学函数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.And(System.Object,System.Object)">
            <summary>
            两个表达式进行与运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Or(System.Object,System.Object)">
            <summary>
            两个表达式进行或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Not(System.Object)">
            <summary>
            返回源表达式的非值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Modulo(System.Object,System.Object)">
            <summary>
            对源表达式进行求余运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.ExclusiveOr(System.Object,System.Object)">
            <summary>
            对两个表达式进行异或运算。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="otherExp">参与运算的表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Ceiling(System.Object)">
            <summary>
            返回源表达式的最小整数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Round(System.Object,System.Object)">
            <summary>
            将源表达式的小数位舍入。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="digitExp">小数位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Truncate(System.Object)">
            <summary>
            返回源表达式的整数部份。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Floor(System.Object)">
            <summary>
            返回源表达式的最大整数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Log(System.Object)">
            <summary>
            返回以e为底的对数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Log10(System.Object)">
            <summary>
            返回以10为底的对数值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Exp(System.Object)">
            <summary>
            返回e的指定次冪。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Abs(System.Object)">
            <summary>
            返回源表达式的绝对值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Negate(System.Object)">
            <summary>
            返回源表达式的反值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Power(System.Object,System.Object)">
            <summary>
            返回源表达式的指定冪。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="powerExp">冪。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Sqrt(System.Object)">
            <summary>
            返回源表达式的二次开方值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Sin(System.Object)">
            <summary>
            返回源表达式的正弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Cos(System.Object)">
            <summary>
            返回源表达式的余弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Tan(System.Object)">
            <summary>
            返回源表达式的正切值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Asin(System.Object)">
            <summary>
            返回源表达式的反正弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Acos(System.Object)">
            <summary>
            返回源表达式的反余弦值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Atan(System.Object)">
            <summary>
            返回源表达式的反正切值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Sign(System.Object)">
            <summary>
            返回源表达式的符号。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.LeftShift(System.Object,System.Object)">
            <summary>
            返回源表达式左移后的值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="shiftExp">位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.RightShift(System.Object,System.Object)">
            <summary>
            返回源表达式右移后的值。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="shiftExp">位数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.MathSyntax.Random">
            <summary>
            返回随机数生成函数。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.StringSyntax">
            <summary>
            基本的字符串函数。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.Substring(System.Object,System.Object,System.Object)">
            <summary>
            取源表达式的子串。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="startExp">子串的起始字符位置。</param>
            <param name="lenExp">子串中的字符数。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.Length(System.Object)">
            <summary>
            计算源表达式的长度。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.IndexOf(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            判断子串在源表达式中的位置。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="startExp">搜索起始位置。</param>
            <param name="countExp">要检查的字符位置数</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.ToLower(System.Object)">
            <summary>
            将源表达式转换为小写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.ToUpper(System.Object)">
            <summary>
            将源表达式转换为大写格式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.TrimStart(System.Object)">
            <summary>
            截掉源表达式的左边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.TrimEnd(System.Object)">
            <summary>
            截掉源表达式的右边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.Trim(System.Object)">
            <summary>
            截掉源表达式的两边所有空格。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.Replace(System.Object,System.Object,System.Object)">
            <summary>
            将源表达式中的部份字符替换为新的字符。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="searchExp">要搜寻的字符串。</param>
            <param name="replaceExp">要替换的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.Concat(System.Object[])">
            <summary>
            将一组字符串连接为新的字符串。
            </summary>
            <param name="strExps">要连接的字符串数组。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.Reverse(System.Object)">
            <summary>
            反转源表达式。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.Syntax.StringSyntax.IsMatch(System.Object,System.Object)">
            <summary>
            正则表达式匹配。
            </summary>
            <param name="sourceExp">源表达式。</param>
            <param name="regexExp">正则表达式。</param>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.Syntax.SyntaxParseException">
            <summary>
            语法解析时发生的异常。
            </summary>
        </member>
        <member name="M:Fireasy.Data.Syntax.SyntaxParseException.#ctor(System.String)">
            <summary>
            使用语句法初始化 <see cref="T:Fireasy.Data.Syntax.SyntaxParseException"/> 类的新实例。
            </summary>
            <param name="syntaxName">语法名称。</param>
        </member>
        <member name="T:Fireasy.Data.TableCommand">
            <summary>
            表示使用表名称查询的命令。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.TableCommand.op_Implicit(System.String)~Fireasy.Data.TableCommand">
            <summary>
            将字符串转换为 <see cref="T:Fireasy.Data.TableCommand"/> 实例。
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.TableCommand.op_Explicit(Fireasy.Data.TableCommand)~System.String">
            <summary>
            将 <see cref="T:Fireasy.Data.TableCommand"/> 转换为字符串。
            </summary>
            <param name="tbCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Fireasy.Data.TableCommand.#ctor(System.String)">
            <summary>
            使用表名称初始化 <see cref="T:Fireasy.Data.TableCommand"/> 类的新实例。
            </summary>
            <param name="tableName">数据表的名称。</param>
        </member>
        <member name="M:Fireasy.Data.TableCommand.ToString">
            <summary>
            输出字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.TotalRecordEvaluator">
            <summary>
            以记录总数作为评估依据，它需要计算出返回数据的总量，然后计算总页数。无法继承此类。
            </summary>
        </member>
        <member name="P:Fireasy.Data.TotalRecordEvaluator.Expiration">
            <summary>
            获取缓存记录数的时间间隔。默认为 null，不使用缓存。
            </summary>
        </member>
        <member name="T:Fireasy.Data.TransactionScopeConnections">
            <summary>
            用于管理处于 <see cref="T:System.Transactions.TransactionScope"/> 中的数据库链接。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.TransactionScopeConnections.GetConnection(Fireasy.Data.IDatabase)">
            <summary>
            从分布式事务环境中获取数据库链接对象。
            </summary>
            <param name="database">数据库对象。</param>
            <returns>如果未启用分布式事务，则为 null，否则为对应 <see cref="T:Fireasy.Data.IDatabase"/> 的数据库链接对象。</returns>
        </member>
        <member name="M:Fireasy.Data.TransactionScopeConnections.OnTransactionCompleted(System.Object,System.Transactions.TransactionEventArgs)">
            <summary>
            事务完成后，关闭数据库链接。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Fireasy.Data.TransactionStack">
            <summary>
            一个堆栈，用于事务控制。
            </summary>
        </member>
        <member name="M:Fireasy.Data.TransactionStack.Push">
            <summary>
            入栈。
            </summary>
        </member>
        <member name="M:Fireasy.Data.TransactionStack.Pop">
            <summary>
            出栈，并判断是否已至栈底。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fireasy.Data.TryNextEvaluator">
            <summary>
            以尝试下一页作为评估依据，它并不计算数据的总量及总页数，始终只判断下一页是否有效，该评估器一般用于数据量非常大的环境中。无法继承此类。
            </summary>
        </member>
        <member name="T:Fireasy.Data.UnableGetDatabaseScopeException">
            <summary>
            无法获取 <see cref="T:Fireasy.Data.DatabaseScope"/> 对象时抛出此异常。无法继承此类。
            </summary>
        </member>
        <member name="M:Fireasy.Data.UnableGetDatabaseScopeException.#ctor">
            <summary>
            初始化 <see cref="T:Fireasy.Data.UnableGetDatabaseScopeException"/> 类的新实例。
            </summary>
        </member>
    </members>
</doc>
